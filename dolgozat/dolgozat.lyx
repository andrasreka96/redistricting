#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass report
\begin_preamble
\usepackage{amsmath}
\usepackage[vlined,ruled]{algorithm2e}
\usepackage{nonfloat}
\usepackage{listings}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language magyar
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language polish
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Szavazókörzetek újraosztása
\end_layout

\begin_layout Author
András Réka
\end_layout

\begin_layout Chapter
Bevezetés
\end_layout

\begin_layout Standard
A modern demokráciák működésének elengedhetetlen alapfeltétele (többek között)
 egy átlátható választási rendszer.
 Egy pártatlan és átlátható választási folyamat hiánya, kétségbe vonhatja
 a közigazgatási rendszer (kormány, intézmények, stb.) legitimitását.
 Sajnos mindig vannak olyan folyamatok, amelyek azt az érzetet ébresztik
 a szavazóban, hogy a döntések tőle függetlenül, zárt ajtók mögött zajlanak.
 Ezen folyamatok közé tartozik a szavazókörzetek újraosztása.
 Jobb esetben, az újraosztási tervet egy függetlennek nevezett bizottság
 készíti el, amelyet majd valamely törvényhozó szerv elfogad.
 Az emberek jogosan sejtenek rejtett szándékokat a gyakran földrajzi szempontból
 irracionálisnak tetsző határvonalak mögött: 
\emph on
redistricting
\begin_inset Foot
status open

\begin_layout Plain Layout
A választási körzetek újraosztása
\end_layout

\end_inset

 
\emph default
és 
\emph on
gerrymandering
\begin_inset Foot
status open

\begin_layout Plain Layout
A választási körzetek újraosztási folyamatának befolyásolása annak érdekében,
 hogy bizonyos érdekcsoportoknak kedvező választási eredmény szülessen.
\end_layout

\end_inset


\emph default
 – ez a két kifejezés elválaszthatatlanná vált.
 A körzetek újraosztása sokszor elkerülhetetlen, ezért az átlátható és az
 igazságos választások érdekében a választókerület-manipulációt kell megszüntetn
i.
 A dolgozatban bemutatott QGIS
\begin_inset Foot
status open

\begin_layout Plain Layout
Korábbi nevén: Quantum GIS.
\end_layout

\end_inset

 kiterjesztés (plug-in) célja az újraosztási folyamat teljes automatizálása,
 ami mindenki számára követhetővé és átláthatóvá teszi a folyamatot.
 A felosztást egy többszörös célfüggvényt optimalizáló algoritmus végzi,
 a szimulált hűtés
\begin_inset Foot
status open

\begin_layout Plain Layout
Angolul 
\begin_inset Quotes pld
\end_inset

simulated annealing
\begin_inset Quotes prd
\end_inset

.
\end_layout

\end_inset

 módszerét használva.
 Azáltal, hogy eltűnik a folyamatból az emberi tényező, elkerülhetővé válnak
 az olyan felosztások, amelyek valamely érdekcsoportnak szándékosan kedveznek.
 Ugyanakkor az, hogy a program milyen kritériumok alapján végzi a felosztást,
 mindenki számára áttekinthető, így az újraosztás körüli gyakori bizalmatlanság
 is megszűnne.
 Ez remélhetőleg csökkentené a kételyeket a többségi elven működő demokratikus
 rendszerek legitimitását illetően, és megszüntetné a történelem során oly
 sokszor előforduló, önkényes 
\begin_inset Quotes pld
\end_inset

határvonalakat
\begin_inset Quotes prd
\end_inset

.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename NCDISTRICT.png
	lyxscale 40
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Észak-Karolina jelenlegi 12.
 választói körzete
\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
A 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Politika"

\end_inset

.
 fejezetben megmagyarázásra kerül néhány, a probléma átlátásához szükséges
 politikai fogalom.
 Majd a 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:GISQGIS"

\end_inset

.
 fejezet röviden ismerteti az alkalmazás által használt technológiákat:
 a térinformatikai (GIS) rendszereket általában, majd konkrétan a QGIS térinform
atikai szoftvercsomagot.
 
\end_layout

\begin_layout Standard
A szavazókörzetek felosztását végző algoritmus részletes bemutatása a 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Algoritmus"

\end_inset

.
 fejezetben található.
 A többszörös célfüggvény néhány elengedhetetlen kritériumnak megfelelően
 van megválasztva, amit szintén ebben a fejezetben tárgyalunk.
 Végül az 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Romania"

\end_inset

.
 fejezetben – a módszer alkalmazásaként – generáljuk Románia megyéinek lehetsége
s felosztásait.
\end_layout

\begin_layout Chapter
Egy kis politika
\begin_inset CommandInset label
LatexCommand label
name "chap:Politika"

\end_inset


\end_layout

\begin_layout Section
Parlamenti választások
\end_layout

\begin_layout Standard
A demokráciákban a törvényhozás tagjait legtöbb esetben közvetlenül választják
 meg.
 A törvényhozó testületet lehet egykamarás vagy kétkamarás.
 A kétkamarás rendszerek gyakoribbak, ezeket a Képviselőház és a Szenátus
 alkotja.
 Ez nagy számú képviselő
\begin_inset Foot
status open

\begin_layout Plain Layout
Romániában 329 képviselőt választanak, az Egyesült Államokban 435 képviselőt
 választanak
\end_layout

\end_inset

 és szenátor
\begin_inset Foot
status open

\begin_layout Plain Layout
Romániában 136 szenátort választanak, az Egyesült Államokban 100 szenátort
 választanak
\end_layout

\end_inset

 megválasztását feltételezi, azonban az országok ennél jóval kevesebb adminisztr
ációs egységre (megye, tartomány, stb.) vannak osztva.
 Míg közigazgatási szempontból optimálisabb, ha az országok kevés egységre
 vannak osztva, a parlament tagjainak száma minnél nagyobb, annál inkább
 beszélhetünk képviseleti demokráciáról.
 Tehát a megyék/tartományok száma nem feleltethető meg a kepviselők és szenátoro
k számával.
 Ahhoz, hogy parlamenti képviselőket válasszunk, az ország meglévő közigazgatási
 egységeit kisebb részekre kell osztani.
 Ezeket a felosztásokat nevezzük választói körzeteknek.
 A körzeteket az ország legkisebb adminisztrációs egységei (falvak, városok,
 stb.) alkotják.
 Két fajtájukat különböztetjük meg: többmandátumos választókörzet és egyéni
 (egymandátumos) választókörzet.
 Az egyéni körzeti választási rendszerek esetén minden választókörzet egy
 képviselőt delegál.
 Ebben az esetben a körzetek száma megegyezik a parlamenti mandátumok számával.
 Ilyen szavazói rendszert alkalmaznak többek között Franciaországban, az
 Egyesült Királyságban és az Amerikai Egyesült Államokban.
 A többmandátumos választókörzeteket az arányos-pártlistás választási rendszerek
ben használják.
 Ez esetben az állampolgárok a pártok jelöltlistáira szavaznak, a pártok
 a kapott szavazatokkal arányos mértékben jutnak be a parlamentbe.
 Sok állam a fent említett választási rendszer valamilyen kombinációját
 használja, például Románia és Magyarország.
 A kizárólag egymandátumos körzeteket használó választások kimenetele manipulálh
ató a legnagyobb mértékben, ennek okát a következő alfejezetekben tisztázzuk.
 
\end_layout

\begin_layout Section
Redistricting
\end_layout

\begin_layout Standard
Különböző demográfiai változások következtében a választási körzetek populációja
 csökkenhet vagy növekedhet.
 Ez a választói rendszeren belüli aránytalanságokhoz vezet, ami azt eredményezi,
 hogy a sürűbben lakott körzetek polgárainak szavazata kevesebbet ér, mint
 a ritkábban lakott körzetekben élő polgároké.
 Ez ellentmond a demokrácia 
\begin_inset Quotes pld
\end_inset

egy ember egy szavazat
\begin_inset Quotes prd
\end_inset

 elvével.
 Ennek elkerülése érdekében a választási körzeteket bizonyos évenként újraosztjá
k.
 Korábban az újraosztást a törvényhozó hatalom jelölte ki különösebb megkötések
 nélkül.
 Az így bekövetkezett folyamatos visszaélések eredményeként, az országok
 elkezdtek törvényeket hozni az újraosztási tervekre vonatkozólag: a körzetek
 folytonosak kell legyenek, a körzetek között a populáció egyenletes eloszlást
 kell kövessen, kompaktak kell legyenek, megkell örizniük az ország adminisztrác
iós felbontását, stb.
 Mindezek ellenére a szavazókörzetek újraosztásához, gyakran nem az igazságos
 választási előfeltételek megteremtését társítják, sokkal inkább a gerrymanderin
g fogalmával együtt emlegetik.
\end_layout

\begin_layout Section
Gerrymandering
\end_layout

\begin_layout Standard
A gerrymandering Elbridge Gerry szenátorról kapta a nevét, aki jóváhagyott
 egy olyan körzet felosztási tervet, amely jelentős előnyhöz jutatta a demokratá
kat.
 A különös alakú választókerület egy szalamandrához hasonlított.
 A Gerry névhez illesztve az angol 'salamander' szót megkapjuk a gerrymandering
 kifejezést.
 A gerrymandering vagy választókerület-manipuláció a választói körzeteknek
 egy olyan felosztását jelenti, amely kedvező/kedvezőtlen helyzetbe hozhat
 valamely érdekcsoportot:) A választási eredmények ilyen manipulációját
 kiváltképp a többségi elven müködő demokratikus rendszerekben fordulhat
 elő.
 Ezek a rendszerek nem arányosan választják meg képviselőiket, az a képviselő
 nyer aki a szavazatok többségét kapta, így mindig lesznek kárba veszett
 szavazatok.
 Tegyük fel, hogy egy 100 szavazóból álló körzetben, A párt 90 szavazatot
 kap, B párt 10-et.
 Ebben az esetben B párt vesztesége 10, A párté 39 (90 minusz a győzelemhez
 szükséges 51 szavazat).
 A választókerület-manipulációt végző párt arra törekszik, hogy az ellenfél
 kárba veszett szavazatait maximalizálja, míg az ő esetében minimalizálja
 a veszteséget.
\end_layout

\begin_layout Chapter
Térinformatikai rendszerek
\begin_inset CommandInset label
LatexCommand label
name "chap:GISQGIS"

\end_inset


\end_layout

\begin_layout Standard
A GIS (Geographic Information System) hardver, szoftver és módszerek rendszere,
 amely segíti a komplex tervezési és irányítási feladatok megoldására szolgáló
 térbeli adatok gyűjtését, kezelését, feldolgozását, elemzését és a megjelenítés
t.
 A GIS technológiák könnyedebbé teszik a térbeli adatok rendszerezését és
 térbeli kapcsolataik megértését, az által hogy egy rendszerbe integrálják
 a térképi és leíró adatokat.
 Egy térinformatikai rendszerben az adatok elérése földrajzi helyzetük alapján
 is lehetséges, a digitális térképen megjelölve egy pontot, a szoftver kikeresi
 a térképhez tartozó adatbázisból az adott ponthoz tartozó adatokat.
 Ugyanakkor lehetővé teszik a térképek közötti átfedéseket, úgymond a térképek
 
\begin_inset Quotes pld
\end_inset

összelinkelését
\begin_inset Quotes prd
\end_inset

.
\end_layout

\begin_layout Section
Adatmodellezés
\end_layout

\begin_layout Standard
A GIS által feldolgozott adatok két típusát különböztetjük meg: térbeli
 és leíró adatok.
 A térbeli vonások alapján köthetjük az adatainkat a Föld pontjaihoz (georeferen
cing), láthatjuk a formájukat és az egymáshoz viszonyított helyzetüket,
 méretüket.
 A térbeli adatokat layerekben (réteg) tároljuk.
 A layerekben tárolt objektumok lehetnek pontok, vonalak vagy polygonok.
 Ezekhez az objektumokhoz kapcsolódik egy relációs adatbázis, amely a leíró
 adatainkat tartalmazza.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ATTRIBTABLE.png
	lyxscale 15
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A térképen látható sárga pontoknak megfelelő sorok vannak az attribútumtáblában
 kijelölve
\end_layout

\end_inset


\end_layout

\end_inset

Az attribútumtábla minden sorának megfelel egy, a layerhez tartozó, objektum.
 Ezeket featureknek nevezzük.
 Az attribútumtábla oszlopai tartalmazzák az objektumok különböző tulajdonságait.
 Az attribútumtáblán tetszőleges relációs adatbázisok műveletek hajthatóak
 végre.
\end_layout

\begin_layout Standard
A GIS kétféle módszert használ a valós világ objektumokra való leképezésére.
 Az egyik a raszteres (grid) adatmodell.
 A raszteres adatmodellt azonos méretű cellák alkotják, amelyek egy szabályos
 rácson helyezkednek el.
 Minden cella egy értéket tartalmaz, a rácshálózat az egész teret kitölti
 és a tér minden pontjáról információt hordoz.
 Raszteres adatnak számít például egy műholdfotó, ahol minden színhez különböző
 jelentések társulnak.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Fuji_ALI2.jpg
	lyxscale 50
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
EO-1 műhold felvétele a A Fudzsi-hegyről 
\end_layout

\end_inset


\end_layout

\end_inset

A második adatmodell a vektoros adatmodell, amely az ábrázolandó területet
 és a rajta lévő objektumokat pontok és a köztük lévő egyenesek együtteseként
 fogja fel.
 A raszteres adatmodellel ellentétben, nem tölti ki a teret.
 Csupán pontokat tárol koordinátákként, valamint a vonalak vagy polygonok
 (zárt vonalak) összekötésére vonatkozó információkat.
 Az ilyen típusú adatok tárolása általában shape fájlokban történik.
 Ez igazábol legkevesebb három másik különböző formátumú fájlt foglal magába.
 A „dbf” kiterjesztésű fájl (dBase file) a leíró adatokat tartalmazza, az
 
\begin_inset Quotes pld
\end_inset

shp
\begin_inset Quotes prd
\end_inset

 kiterjesztésű az objektumokat tárolja, az „shx” kiterjesztésű fájl a kapcsolato
t határozza meg a két fájl összetartozó részei közt.
 
\end_layout

\begin_layout Standard
Összefoglalva azt mondhatjuk, hogy a raszteres adatmodell elsősorban az
 entitások jelentését vizsgálja (terep, növényzet, épületek, utak, stb.),
 ezért sokkal inkább alkalmas területi elemzésre (fedvényműveletekre).
 Ezzel szemben a vektoros adatmodell grafika-központú modell, azaz nagyobb
 geometriai pontossággal tárolja az adatokat.
 A két formátum közötti konverzió lehetséges.
 A vektor-raszter konverzió jól megoldott, viszonylag egyszerű feladat,
 melynek során a vektoros információk a raszter felbontásának megfelelő
 méretű képelemmé konvertálódnak, elveszítve eredeti struktúrájukat.
 A raszter-vektor konverzió lényegesen összetettebb feladat, nehezebb automatizá
lni, megoldása nagymértékben függ az alkalmazott konverziós algoritmustól
 és a konverzió paramétereitől.
\end_layout

\begin_layout Section
Adatgyűjtés
\end_layout

\begin_layout Standard
A térinformatikai rendszerek fontos része a megfelelő adatok beszerzése
 és feltöltése a rendszerbe.
 Térbeli adatokat sok forrásból kaphatunk, lehetnek hagyományos papírtérképek,
 műholdak által biztosított adatok, GPS által szolgáltatott koordináták,
 vagy akár az interneten megosztott 
\begin_inset Quotes pld
\end_inset

geotagged
\begin_inset Quotes prd
\end_inset

 információk.
\end_layout

\begin_layout Section
Vetítés
\end_layout

\begin_layout Standard
A vetítésének több módja is van, ezért a vetítésre vonatkozó információk
 tárolása is szükséges, amennyiben a térképeket egymásra akarjuk illeszteni.
 A használt vetítés tárolása a projection (.prj) fájlokban történik.
 A térképvetítés matematikai transzformációk sorozata, amely során egy szferikus
 felület felszínén található pontok síkba vetítődnek.
 Először a Föld szabálytalan felszínét egy szabályos geometria alakzatként
 kell kezelnünk, mint a gömb vagy szferoid, aztán az így kapott felületet
 vetíthetjük síkba.
 Ez a folyamat mindig valamilyen torzulást eredményez, ezért van olyan sokféle
 vetítés.
 Van amelyik a pontok közti távolságot őrzi meg, mások a levetített rész
 területét, formáját tartják meg.
 Nem létezik egy egységes vetítési eljárás.
 Vannak elterjedtebbek,mint például a Google Maps és a Mango Map által használt
 Web Mercator vetítés.
\end_layout

\begin_layout Section
QGIS Bevezető
\end_layout

\begin_layout Standard
Az első feladat az objektumokat tartalmazó layerek betöltése.
 Amint betöltünk egy layert az láthatóvá válik a QGIS térképnézegetőjében.
 A térképen történő navigálást legegyszerűbben a Térkép navigáció eszközsor
 elemeivel tehetjük meg.
 Betöltéskor a QGIS felépíti a térképen látható geometria formáknak megfelelő
 objektumokat.
 Ezeket manipulálhatjuk a menüsor által nyújtott eszközökkel, vagy a QGIS
 által biztosított Python konzolból scriptek segítségével.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename console.png
	lyxscale 20
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A konzolban (alul bal oldalt) látható a mellette lévő szövegszerkesztőben
 (alul jobb oldalt) írt script végrehajtásának eredménye
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A QGIS által felépített layer objektumokhoz tartozó információkat a QgsInterface
 osztály iface nevű instanciáján keresztűl érhetjük el.
 Az így kapott layer objektumtól kérthetünk egy iterátort a featurekhez.
 A featurek egy olyan szótár (dictionary), ahol a kulcsok az attribútumtábla
 mezőinek nevei.
 Tehát az f feature népesség elnevezésű mezőjének az értékére f['népesség']
 formában hivatkozhatunk.
 A QGIS a geometriai műveleteket a GEOS (Geometry Engine, Open Source) könyvtár
 segítségével végzi.
 Minden feature rendelkezik egy QgsGeometry objektummal, ezt a geometry
 elnevezésű függvény téríti vissza.
 Az így kapott objektumon már különböző geometriai műveleteket is végrehajthatun
k.
 Például: terület vagy kerület számítás, metszéspontok és középpont megkeresése,
 polygonok esetén a polygon vonalakon belül elhelyezkedő pontok meghatározása,
 formák kombinálása, stb.
\end_layout

\begin_layout Standard
A QGIS-ben létrehozhatunk saját modulokat, illetve letölthetünk mások által
 keszítetteket.
 Egy modul létrehozása sok repetitív feladattal jár, ezért a QGIS fejlesztői
 keszítettek egy modult a modulok keszítésére.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pluginbuilder.png
	lyxscale 20
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Plugin Builder modul
\end_layout

\end_inset


\end_layout

\end_inset

A Plugin Builder legenerál egy python modult, az alábbi könyvtárstrukturával.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename tree.png
	lyxscale 20
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
generált könyvtárstruktúra
\end_layout

\end_inset


\end_layout

\end_inset

Az __init__.py állomány a modul belépési pontja.
 A redistricting.py fájl tartalmazza a fő programot, a run metódusa hívódik
 meg, a modul minden futtatásakor.
 A redistricting_dialog_base.ui a párbeszédablakot tartalmazza, a redistricting_d
ialog.py-ban van a párbeszédablak kezelő.
 A pylintrc állományban vannak a szintaktika ellenőrzéshez szükséges reguláris
 kifejezések...
\end_layout

\begin_layout Section
Felhasználás
\end_layout

\begin_layout Standard
Az adatok reprezentálásának és elemzésének a GIS által biztosított módját
 sok területen használják: az epidemiológusok a vírusok globális terjedését
 vizsgálják, a kriminológusok bűnözési mintákat keresnek, a geológusok a
 Föld fizikai elváltozásait megfigyelve előre jelzik a földmozgásokat, vagy
 lehetséges fosszilis erőforrásokat keresnek.
 Minden terület más természeti veszélyeknek kiszolgáltatott, ezen természetes
 jellemzők összegyűjtése és elemzése segít a kockázatcsökkentő intézkedések
 meghatározásában, és az esetleges katasztrófa utáni intézkedésekben.
 A MODFLOW (talajvíz modellező program) GIS-be való integrálásával elérhető,
 hogy a talajvíz mozgás modelek más GIS adatokkal összekapcsolva váljanak
 elemezhetővé.
 Ezt használva vízkészlet-kezeléssel kapcsolatos problémákat oldanak meg.
 Ugyanakkor a GIS az ökologia fontos eszköze, segítségével belehet határolni
 a vadon elő állatok mozgáskörzetét (legkisebb konvex sokszög meghúzása),
 így elkerülhető az élőhelyeik mesterséges szétdarabolódása.
 Nem csak tudományos területeken használják a GIS-t, ugyanúgy a hétköznapi
 tevékenységeink szerves része.
 Amikor egy ismeretlen helyen, egy étterem után keresgélünk, ma már nem
 úgy tesszük, hogy bebarangoljuk a környéket.
 Egyszerűen az okostelefonunk segítségével megnezzük a közeli intézményeket,
 szűrjük őket funkcionalitásuk szerint, esetleg más emberek ajánlásait,
 véleményeit is elolvassuk.
 Amint kiválasztottuk a megfelelő helyet a GPS segítségével egyenesen oda
 megyünk.
 A Mapbox Outdoors alkalmazás bicikliutakat, turaösvényeket, sípályakat
 mutat a szabadban bóklászóknak.
 A Madrid’s Air Map alkalmazást használva megfigyelhetőek a madridi levegőt
 alkotó gázak, szennyeződések, vírusok.
 Mindenki használ valamilyen GIS technológiát, van aki 
\emph on
geotagged 
\emph default
információkkal ömleszti el az internetet, van aki a GIS eszközök segítségével
 az adatok komplex elemzését végzi, és van aki egyszerűen csak a világban
 navigál.
 szappanoperák
\end_layout

\begin_layout Chapter
A szavazókörzetek újraosztása
\begin_inset CommandInset label
LatexCommand label
name "chap:Algoritmus"

\end_inset


\end_layout

\begin_layout Section
A szimulált hűtés módszere
\end_layout

\begin_layout Standard
A szimulált hűtés módszere egy metaheurisztikus algoritmus, amelyet kombinatorik
us optimalizációs problémák megoldására használnak.
 A kombinatorikus optimalizálás olyan optimalizációs problémákat old meg,
 ahol a megoldástér véges.
 A szimulált hűtésnek több változata is van: 
\emph on
párhuzamos szimulált hűtés
\emph default
, 
\emph on
gyors szimulált hűtés
\emph default
, 
\emph on
adaptív szimulált hűtés
\emph default
.
 A továbbiakban a klasszikus szimulált hűtés módszerét tárgyaljuk, amelyet
 Kirkpatrick, Gelatt, és Vecchi vezetett be 1983-ban (lásd 
\begin_inset CommandInset citation
LatexCommand cite
key "Kirk"

\end_inset

), optimalizációs problémák megoldására.
 A cikkben leírják a termodinamikai rendszerek viselkedését, majd megmutatják
 hogy ezeket az elveket hogyan lehet felhasználni egy optimalizációs technika
 kifejlesztésére.
 
\end_layout

\begin_layout Standard
Egy termodinamikai rendszert különböző fizikai mennyiségek összessége ír
 le (hőmérséklet, energia, nyomás, entrópia, stb.), míg egy metaheurisztikus
 algoritmusnak csupán két eszközre van szüksége: 
\emph on
célfüggvény
\emph default
re (vagy 
\emph on
költségfüggvény
\emph default
re) és 
\emph on
szomszédos megoldást generáló módszer
\emph default
re.
 A megfeleltetés a következő: az optimalizációhoz használt célfüggvény a
 rendszer energiaszintjének felel meg.
 Amikor a rendszer eléri az egyensúlyi állapotát, az energiaszint minimális.
 A cél a rendszer egyensúlyi állapotának az elérése, vagyis a célfüggvény
 minimumának a megtalálása.
 Egy szomszédos állapotot a jelenlegi állapoton eszközölt véletlen perturbációk
 által érünk el, ami a rendszeren belüli atommozgásoknak feleltethető meg.
 Bevezetünk egy hőmérséklet változót a termodinamikai rendszerek mintájára,
 amely szabályozza a keresésünk viselkedését.
 Ahhoz, hogy megtaláljuk egy anyag egyensúlyi állapotát, nem elegendő ha
 lehűtjük.
 Az analógiát követve, a keresés alacsony hőmérsékleten azt jelenti, hogy
 mindig csak a jobb megoldásokat fogadjuk el, gyakorlatilag lokális minimumot
 keresünk.
 Ha stabil kristályokat akarunk kapni, először forráspont fölé kell melegíteni
 az anyagot, majd lassan hűteni, elegendő időt hagyva a molekuláknak, hogy
 kristályokba rendeződjenek.
 Nagy hőmérsékleten a molekulák kaotikus mozgást végeznek, ennek megfelelően
 az algoritmus is nagy ugrásokat tesz a megoldástérben, így elkerülhető
 az, hogy lokális minimumba ragadjunk.
 Azt, hogy a keresés mekkora valószínűséggel lép a jelenleginél rosszabb
 állapotba, a rendszer aktuális hőmérséklete befolyásolja.
 Az iterációk során akkor fogadunk el egy új megoldást, ha az jobbnak bizonyul,
 mint a jelenlegi megoldás.
 Amennyiben nem alacsonyabb az új megoldásunk célfüggvényének az értéke,
 akkor a jelenlegi megoldást az úgynevezett Metropolis-kritérium alapján
 
\begin_inset Formula 
\[
p=\exp((E-E_{0})/T)
\]

\end_inset

 valószínűséggel cseréljük le, ahol 
\begin_inset Formula $E$
\end_inset

 az aktuális megoldás objektív értéke (a célfüggvény értéke az aktuális
 megoldás esetén), 
\begin_inset Formula $E_{0}$
\end_inset

 a szomszédos megoldás objektív értéke, 
\begin_inset Formula $T$
\end_inset

 pedig a rendszer hőmérséklete.
\end_layout

\begin_layout Section
A körzetek újraosztásának feladata, a célfüggvények
\end_layout

\begin_layout Standard
Az ujraosztási probléma egy ország 
\begin_inset Formula $m$
\end_inset

 darab körzetre való felosztását jelenti.
 Egy érvényes felosztási terv alapfeltétele, hogy a körzetek folytonosak
 és figyelembe veszik a már meglévő adminisztrációs határokat.
 Ezeket úgy biztosítjuk, hogy a felosztást mindig egy megyén belül végezzük,
 és a körzeteket az adott megye egymással szomszédos, legkisebb adminisztrációs
 egységei (unitok) alkotják.
 Az így kapott 
\begin_inset Formula $(K,U)$
\end_inset

 párokat, ahol 
\begin_inset Formula $K$
\end_inset

 a körzeteket, 
\begin_inset Formula $U=\{u_{1},u_{2},...,u_{n}\}$
\end_inset

 a 
\begin_inset Formula $K$
\end_inset

 körzethez tartozó unitok halmazát jelöli, nevezzük egy érvényes felosztásnak.
 Azt, hogy egy megyét hány körzetre osztunk, a legnagyobb maradék metódussal
 (largest remainder method) határozzuk meg.
 Először kiszámítjuk a nemzeti átlagot (
\begin_inset Formula $nm=p_{ország}/n$
\end_inset

, ahol 
\begin_inset Formula $p_{ország}$
\end_inset

 az ország populációját jelöli).
 Kezdetben minden megyéhez rendelünk 
\begin_inset Formula $\lfloor p_{megye}/nm\rfloor$
\end_inset

 darab körzetet.
 A megmaradt körzeteket szétosztjuk a legnagyobb 
\begin_inset Formula $frac(p_{megye}/nm)$
\end_inset

 értékkel rendelkező megyék között (mindegyikhez plusz egy körzetet adunk).
 Az újraosztás során a célunk olyan érvényes felosztási terveket találni,
 amelyek más, általunk definiált kritériumoknak is megfelelnek.
\end_layout

\begin_layout Standard
Minden kritériumnak megfeleltethető egy célfüggvény, ezek száma tetszőlegesen
 megválasztható.
 Az optimalizáció során arra törekszünk, hogy a megadott célfüggvények mindegyik
ét figyelembe véve találjunk optimum közeli megoldást.
 A dolgozatban bemutatott program két célfüggvényt használ, a mexikói újraosztás
ok mintájára.
 Ezt a két függvényt használta az IFE (Instituto Federal Electoral) a 2006-os
 választásokot megelöző újraosztások során.
 A 
\begin_inset Formula $C_{1}$
\end_inset

 függvény azt méri, hogy a populáció mennyire oszlik el egyenletesen a körzetek
 között.
 Minnél alacsonyabb a függvény értéke, annál egyenletesebb az eloszlás.
 A használt függvényt az IFE (Instituto Federal Electoral) határozta meg,
 és használta a 2006-os mexicói újra osztások során:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
C_{1}(P)=\sum_{e\epsilon E}(\frac{P_{e}}{d_{e}*M})^{2}\sum_{s\epsilon S}(\frac{P_{s}}{P_{e}}-\frac{1}{n})^{2}
\]

\end_inset

Ahol 
\begin_inset Formula $P=\{Z_{1},Z_{2},...,Z_{n}\}$
\end_inset

 egy felosztása az országnak, úgy hogy 
\begin_inset Formula $Z_{s}=\{U_{1},U_{2},...,U_{s_{k}}\}$
\end_inset

, 
\begin_inset Formula $Z_{s}$
\end_inset

 az 
\emph on
s
\emph default
 körzet unitjainak a halmaza, és 
\emph on
s
\emph default
 körzet valamely 
\emph on
e 
\emph default
megyéhez tartozik.
 
\begin_inset Formula $P_{e}$
\end_inset

 
\emph on
e
\emph default
 megye populációja, M a nemzeti átlag 
\begin_inset Formula $M=CP/N$
\end_inset

, úgy hogy CP az ország populációja, N az összesen generálandó körzetek
 száma.

\emph on
 A
\emph default
 megyében megengedett szórás
\emph on
 
\emph default

\begin_inset Formula $d_{e}$
\end_inset

.
 A szorzat második tagjában levő 
\begin_inset Formula $P_{s}$
\end_inset

 jelöli s körzet populációját, 
\emph on
n 
\emph default
az
\emph on
 e 
\emph default
megyéhez tartozó körzetek száma.
 Az hogy egy megyében megengedett szórás értéke mekkora, annak a függvényében
 változik, hogy a megye átlaga mennyire tér el a nemzeti átlagtól.
 Ha a két átlag közti különbség kevesebb, mint az ország lakosságának az
 5%, a megengedett szórás 15% lesz.
 5% és 10% közötti eltérés esetén a szórás 10%, míg nagyobb eltérések esetén
 a szórás 5%.
 A másik célfüggvény a körzetek formájának a kompaktságát méri.
 Abból kiindulva, hogy a legkompaktabb forma a kör, mérjük a körzet kompaktságát.
 Legyen a körzethez tartozó unitok által formált alakzat kerülete 
\begin_inset Formula $PE_{s}$
\end_inset

 , területe 
\begin_inset Formula $A_{s}$
\end_inset

.
 Minél kompaktabb a körzetünk, a kerülete annál inkább megegyezik egy 
\begin_inset Formula $A_{s}$
\end_inset

 területű kör kerületével:
\begin_inset Formula 
\[
C_{2}(P)=\ensuremath{\sum_{s\epsilon S}}(\frac{PE_{s}}{4\sqrt{A_{s}}}-1)
\]

\end_inset


\end_layout

\begin_layout Section
Többszörös célfüggvényt használó algoritmus 
\end_layout

\begin_layout Standard
A többszörös célfüggvényt használó algoritmus különböző kritériumokat figyelembe
 véve optimalizál.
 
\end_layout

\begin_layout Standard
Ebben az esetben a cél olyan 
\begin_inset Formula $(K,U)$
\end_inset

 párosításokat találni, amelyek mindkét célfüggvényt megpróbálják egyszerre
 optimizálni.
 
\begin_inset Formula $K$
\end_inset

 a körzeteket jelöli, 
\begin_inset Formula $U$
\end_inset

 a unitokat.
 A unitok a létező legkisebb közigazgatási egységei a felosztandó országnak.
 Az ország egy lehetséges felosztása, vagyis egy megoldás, olyan (K,U) párok
 összessége, ahol minden körzet előre meghatározott számú unitot foglal
 magába, és egy unit csak egy körzethez tartozhat.
 
\end_layout

\begin_layout Standard
Két megoldás összehasonlításánál a következő három lehetséges eset merül
 fel (ahol 
\begin_inset Formula $V$
\end_inset

 jelöli az aktuális megoldást, 
\begin_inset Formula $V'$
\end_inset

 pedig a szomszédos, új megoldást):
\end_layout

\begin_layout Enumerate
\begin_inset Formula $V'$
\end_inset

minden célfüggvény   szerint jobb megoldásnak bizonyul
\end_layout

\begin_layout Enumerate
V' csak bizonyos célfüggvényekre mutat jobb eredményt
\end_layout

\begin_layout Enumerate
V' minden célfüggvény szerint rosszabb megoldásnak bizonyul
\end_layout

\begin_layout Standard
A megoldásainkat egy olyan halmazba gyűjtjük (Pareto halmaz), amely a fenti
 eseteknek megfelelő szabályok szerint bővül.
 Ha V' dominál más megoldásokat (1 eset), átveszi egy dominált megoldás
 helyét és súlyait.
 Azt a megoldást fogja lecserélni, amelyiknél a leginkább jobbnak bizonyul.
 Ezt azt jelenti, hogy összehasonlítódnak a célfüggvények súlyozott összegei,
 és amelyiknél V' súlyozott összege (a súlyokat attól a megoldástól kölcsönzi,
 amellyel éppen összehasonlítódik) a legkisebb, az a megoldás lesz helyettesítve.
 Ha az új megoldás nem dominál (nem igaz az 1.
 eset) és nem dominált (nem igaz a 3.
 eset), akkor a halmazhoz adódik.
 Ha V' dominált valamely megoldás által, nem kerül a halmazba, viszont a
 szimulált hűtésnél leírt valószínűség szerint felválthatja a jelenlegi
 megoldást.
 Amikor egy új megoldás kerül a halmazba, mindig hozza rendelődik egy random
 választott súlyvektor az előre meghatározott súlyok listájából.
 Az algoritmus végére minden súlyvektorhoz fog legalább egy nem dominált
 megoldás tartozni.
 Egy lehetséges algoritmus annak eldöntésére, hogy egy megoldás dominált-e
 más megoldások által, illetve dominál-e más megoldásokat, k darab célfüggvény
 esetén: 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}[H]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
SetKw{LogicAnd}{and}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKw{LogicOr}{or}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwData{LogicTrue}{True}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwData{LogicFalse}{False}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
Input{pareto,U,k, where $k 
\backslash
geq 1$ }
\end_layout

\begin_layout Plain Layout


\backslash
Output{$isdominated$,$dominates$}
\end_layout

\begin_layout Plain Layout

$isdominated 
\backslash
leftarrow 
\backslash
LogicFalse$
\backslash
;
\end_layout

\begin_layout Plain Layout

$dominates 
\backslash
leftarrow
\backslash
emptyset $
\backslash
;
\end_layout

\begin_layout Plain Layout


\backslash
For{$S
\backslash
in
\backslash
mathcal Pareto $} {
\end_layout

\begin_layout Plain Layout

	$dominatedbyS 
\backslash
leftarrow 
\backslash
LogicTrue$
\backslash
;
\end_layout

\begin_layout Plain Layout

	$dominatesS 
\backslash
leftarrow 
\backslash
LogicTrue$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
For{$i=1,..,k$} {
\end_layout

\begin_layout Plain Layout

		$dominatedbyS 
\backslash
leftarrow dominatedbyS
\backslash
  
\backslash
LogicAnd
\backslash
  S.objective(i)<U.objective(i) $
\backslash
;
\end_layout

\begin_layout Plain Layout

		$dominatesS 
\backslash
leftarrow dominatesS 
\backslash
  
\backslash
LogicAnd 
\backslash
 U.objective(i)<S.objective(i) $
\backslash
;
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

	$isdominated 
\backslash
leftarrow isdominated 
\backslash
 
\backslash
LogicOr
\backslash
  dominatedbyS $
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
lIf{dominatesS}{$dominates 
\backslash
leftarrow dominates
\backslash
cup
\backslash
left
\backslash
{s
\backslash
right
\backslash
}$} 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
caption{Dominance($pareto$,$U$,$k$)}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A szimulált hűtés:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}[H]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
SetKw{LogicAnd}{and}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKw{LogicOr}{or}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwData{LogicTrue}{True}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwData{LogicFalse}{False}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
Input{$U$,$T$,$maxiter$,$coolingschedule$ where $U$ is a randomly generated
 initial solution, $T$ is the initial temperature, $coolingschedule 
\backslash
in (0,1)$}
\end_layout

\begin_layout Plain Layout


\backslash
Output{$pareto$}
\end_layout

\begin_layout Plain Layout

$pareto 
\backslash
leftarrow 
\backslash
{U
\backslash
}$;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
While{T not frozen}{
\end_layout

\begin_layout Plain Layout

	
\backslash
For{$i=1,..,maxiter$}{
\end_layout

\begin_layout Plain Layout

		$V 
\backslash
leftarrow neighbor(U) $
\backslash
;
\end_layout

\begin_layout Plain Layout

		
\backslash
uIf{dominates(V,pareto)}{     
\end_layout

\begin_layout Plain Layout

			pareto.update(V) 
\backslash
 
\backslash
; 
\end_layout

\begin_layout Plain Layout

			$U 
\backslash
leftarrow V $
\backslash
;
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

		
\backslash
uElseIf{not dominated(V,pareto)}{
\end_layout

\begin_layout Plain Layout

		    $pareto 
\backslash
leftarrow pareto
\backslash
cup
\backslash
left
\backslash
{V
\backslash
right
\backslash
}$ 
\backslash
;  
\end_layout

\begin_layout Plain Layout

			$U 
\backslash
leftarrow V $
\backslash
;
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

		
\backslash
ElseIf{$random(0,1) <= exp(obj(U)-obj(V)/T)$}{
\end_layout

\begin_layout Plain Layout

			$U 
\backslash
leftarrow V $
\backslash
;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	$T 
\backslash
leftarrow T * coolingschedule$
\backslash
;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
caption{Simulated Annealing()}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Az implementáció részletei
\end_layout

\begin_layout Standard
A megírt 
\begin_inset Quotes pld
\end_inset

Automated Redistricting
\begin_inset Quotes prd
\end_inset

 elnevezésű modul betölthető a QGIS-be, azonban a futtatásához bizonyos
 előfeltételek szükségesek.
 A QGIS munkafelületre szintén bekell legyen töltve két layer, amelyek tartalmaz
zák a felosztandó megyékhez és az őket alkotó unitokhoz tartozó polygonokat.
 A két layer attribútumtáblája összekapcsolható kell legyen a megye azonosítók
 szerint, tehát tudnunk kell, hogy egy közigazgatási egység melyik megyéhez
 tartozik.
 A későbbiekben egy unit szomszédainak a bejárására gyakran kerűl sor, ezért
 a modul első használatakor a 
\begin_inset Quotes pld
\end_inset

neighbours.py
\begin_inset Quotes prd
\end_inset

 elnevezésű scriptet is le kell futtatni, amely bővíti egy attribútummal
 a unitokat tartalmazó adatbázis táblát.
 Az új attribútum a szomszédos unitok azonosítóját sorolja fel.
 Ez később majd sok futási időt nyer a körzetek változtatásához szükséges
 műveletek során.
 A körzetek kerületeinek a kiszámításához egy olyan layert használunk, amely
 a unitokhoz tartozó vonalakat (polyline) tartalmazza.
 Tehát a következő három aktív layerre van szükség a program futásához:
 egy megyéknek megfelelő polygonokat tartalmazú layer, egy unitoknak megfelelő
 polygonokat tartalmazó layer, a unitok polygonjait alkotó vonalakat tartalmazó
 layer.
 A modul indítása előtt a layerekhez tartozó attribútumtábla mezőinek neveit
 is megkell adnunk.
 Ezt a 
\begin_inset Quotes pld
\end_inset

 config.yaml
\begin_inset Quotes prd
\end_inset

 elnevezésű fájl változtatásával tehetjük meg.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

attributes:   
\end_layout

\begin_layout Plain Layout

	county_id: 'countyId'   
\end_layout

\begin_layout Plain Layout

	county_name: 'name'   
\end_layout

\begin_layout Plain Layout

	unit_name: 'name'   
\end_layout

\begin_layout Plain Layout

	unit_population: 'pop2015'   
\end_layout

\begin_layout Plain Layout

	unit_id: 'natcode'   
\end_layout

\begin_layout Plain Layout

	unit_id_poliline: 'id'   
\end_layout

\begin_layout Plain Layout

	unit_neighbours: 'neighbours'   
\end_layout

\begin_layout Plain Layout

	unit_lines: 'lines'
\end_layout

\end_inset

A további paraméterek az optimalizáló algoritmus viselkedését befolyásolják,
 ezek változtatása nélkűl is használható a program, az alapértelmezett beállítás
okkal.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

parameters:   
\end_layout

\begin_layout Plain Layout

	nr_of_districts : 120   
\end_layout

\begin_layout Plain Layout

	cooling_schedule: 0.99   
\end_layout

\begin_layout Plain Layout

	initial_temperature: 5   
\end_layout

\begin_layout Plain Layout

	final_temperature: 0.001   
\end_layout

\begin_layout Plain Layout

	iterations: 1   
\end_layout

\begin_layout Plain Layout

	small_partition: 5   
\end_layout

\begin_layout Plain Layout

	upper_limit: 5   
\end_layout

\begin_layout Plain Layout

	neighbourhood: [-1,1,3,1,3]   
\end_layout

\begin_layout Plain Layout

	deviation: 15   
\end_layout

\begin_layout Plain Layout

	weight_vectors : [[0.9, 0.1],[0.8, 0.2], [0.7, 0.3],[0.6, 0.4],[0.5, 0.5],[0.4, 0.6],[0.3,
 0.7],[0.2, 0.8],[0.1, 0.9],[0.01, 0.99]]   
\end_layout

\begin_layout Plain Layout

	minnr_of_unit : 2  
\end_layout

\begin_layout Plain Layout

	max_iter: 25   
\end_layout

\begin_layout Plain Layout

	max_size_pareto: 100
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Beállíthatjuk, hogy hány körzetre akarjuk osztani az országot.
 A szimulált hűtés módszerének a következő paramétereit változtathatjuk:
 a kezdeti és végső hőmérséklet, a hűtés mértéke és a hőmérsékletenkénti
 iteráció.
 Beállítható a megoldás halmaz maximális mérete és a költségfüggvényekhez
 rendelhető lehetséges súlyok listája.
 Az is megmondható, hogy egy körzethez minimum hány unitnak kell tartoznia.
 A használt költségfüggvényeket az 
\begin_inset Quotes pld
\end_inset

objectives.py
\begin_inset Quotes prd
\end_inset

 elnevezésű fájl tartalmazza, ezek bővítése értelemszerűen nem adható meg
 a konfigurációs fájlban.
 Amennyiben újabb függvényt szeretnénk egy megoldás kiértékeléséhez adni
 azt implementálnunk kell az objectives.py fájlban.
 A program indítás után iterációnként naplózni fogja a megoldáshalmaz viselkedés
ét.
 Amint a hőmérséklet lehűl , a legalacsonyabb objektív értékkel rendelkező
 megoldás megjelenik a QGIS térképnézegetőjében.
 A célfüggvények értéke a konzolban lesz látható.
 
\end_layout

\begin_layout Chapter
Románia
\begin_inset CommandInset label
LatexCommand label
name "chap:Romania"

\end_inset


\end_layout

\begin_layout Section
Románia
\end_layout

\begin_layout Standard
A Romániá adminisztrációs egységeit tartalmazó shape fájlok, egy ingyenes,
 Romániával kapcsolatos térinformatikai adatokat tartalmazó adatbázisból
 származnak.
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.geo-spatial.org/
\end_layout

\end_inset


\end_layout

\end_inset

A felosztásokat Románia 42 megyéjében végeztük, a körzeteket Románia adminisztrá
ciós egységei alkotják
\begin_inset Foot
status open

\begin_layout Plain Layout
Románul 
\begin_inset Quotes pld
\end_inset

Unități administrativ-teritoriale
\begin_inset Quotes prd
\end_inset


\end_layout

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename jud_uat.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Románia megyéi és adminisztrációs egységei
\end_layout

\end_inset


\end_layout

\end_inset

A 2015-ös népszámlálási adatokra hagyatkozva, a legnagyobb maradék metódust
 használva 120 körzetet osztottunk szét a megyék között, az alábbi kódot
 használva:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=Python]
\end_layout

\begin_layout Plain Layout

def AssignDistricts(self):
\end_layout

\begin_layout Plain Layout

	dict_assigned = {i: (self.counties_pop[i]//self.national_mean,
\end_layout

\begin_layout Plain Layout

self.counties_pop[i]/self.national_mean - self.counties_pop[i]//self.national_mean)	
\end_layout

\begin_layout Plain Layout

	for i in range(1,self.nr_of_counties + 1)} 
\end_layout

\begin_layout Plain Layout

		assigned = 0
\end_layout

\begin_layout Plain Layout

		for key, value in dict_assigned.iteritems():             
\end_layout

\begin_layout Plain Layout

			if value[0] == 1:                 
\end_layout

\begin_layout Plain Layout

				dict_assigned[key] = (2,0)                 
\end_layout

\begin_layout Plain Layout

				assigned+=2             
\end_layout

\begin_layout Plain Layout

			else:                 
\end_layout

\begin_layout Plain Layout

				assigned+=value[0]
\end_layout

\begin_layout Plain Layout

	unassigned = self.nr_of_districts-assigned         
\end_layout

\begin_layout Plain Layout

	#assigne an additional district to counties with the highest fractional
 remainder         
\end_layout

\begin_layout Plain Layout

	if unassigned:             
\end_layout

\begin_layout Plain Layout

		dict_sorted = sorted(dict_assigned.items(), key=lambda (k, v): v[1],reverse=Tru
e)             
\end_layout

\begin_layout Plain Layout

		for key,value in list(islice(dict_sorted, unassigned)):              
   
\end_layout

\begin_layout Plain Layout

			dict_assigned[key] = (value[0]+1,value[1])       
\end_layout

\begin_layout Plain Layout

	#return the assigned values         
\end_layout

\begin_layout Plain Layout

		return [assv for (assv,rem) in dict_assigned.values()]
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Elek"

\end_inset

I.
 Elek, 
\emph on
Bevezetés a geoinformatikába
\emph default
, ELTE Eötvös Kiadó (Budapest), 2006.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Kirk"

\end_inset

S.
 Kirkpatrick, C.
 D.
 Gelatt, M.
 P.
 Vecchi, Optimization by Simulated Annealing, Science New Series, Vol.
 220, No.
 4598.
 (May 13, 1983), pp.
 671-680.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Ring"

\end_inset

E.
 A.
 Ringcón-García, M.
 A.
 Guiterrez-Andrade et al., A Multiobjective Algorithm for Redistricting,
 Journal of Applied Research and Technology Volume 11, Issue 3, June 2013,
 pp.
 324–330.
\end_layout

\end_body
\end_document
