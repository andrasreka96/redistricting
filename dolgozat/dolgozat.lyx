#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass report
\begin_preamble
\usepackage{amsmath}
\usepackage[vlined,ruled]{algorithm2e}
\usepackage{nonfloat}
\usepackage{listings}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language magyar
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language polish
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "escapeinside={*@}{@*}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Szavazókörzetek újraosztása
\end_layout

\begin_layout Author
András Réka
\end_layout

\begin_layout Chapter
Bevezetés
\end_layout

\begin_layout Standard
A modern demokráciák működésének elengedhetetlen alapfeltétele (többek között)
 egy átlátható választási rendszer.
 Egy pártatlan és átlátható választási folyamat hiánya kétségbe vonhatja
 a közigazgatási rendszer (kormány, intézmények, stb.) legitimitását.
 Sajnos mindig vannak olyan folyamatok, amelyek azt az érzetet ébresztik
 a szavazóban, hogy a döntések tőle függetlenül, zárt ajtók mögött zajlanak.
 Ezen folyamatok közé tartozik a szavazókörzetek újraosztása.
 Jobb esetben az újraosztási tervet egy függetlennek nevezett bizottság
 készíti el, amelyet majd valamely törvényhozó szerv elfogad.
 Az emberek jogosan sejtenek rejtett szándékokat a gyakran földrajzi szempontból
 irracionálisnak tetsző határvonalak mögött: 
\emph on
redistricting
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
A választási körzetek újraosztása
\end_layout

\end_inset

 
\emph default
és 
\emph on
gerrymandering
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
A választási körzetek újraosztási folyamatának befolyásolása annak érdekében,
 hogy bizonyos érdekcsoportoknak kedvező választási eredmény szülessen.
\end_layout

\end_inset


\emph default
 – ez a két kifejezés elválaszthatatlanná vált.
 A körzetek újraosztása sokszor elkerülhetetlen, ezért az átlátható és az
 igazságos választások érdekében a választókerület-manipulációt kell megszüntetn
i.
 
\end_layout

\begin_layout Standard
Az általunk készített és a dolgozatban bemutatott QGIS
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Korábbi nevén: Quantum GIS.
\end_layout

\end_inset

 kiterjesztés (plug-in) célja az újraosztási folyamat teljes automatizálása,
 ami mindenki számára követhetővé és átláthatóvá teszi a folyamatot.
 A felosztást egy többszörös célfüggvényt optimalizáló algoritmus végzi,
 a szimulált hűtés
\begin_inset Foot
status open

\begin_layout Plain Layout
Angolul 
\emph on
simulated annealing
\emph default
.
\end_layout

\end_inset

 módszerét használva.
 Azáltal, hogy eltűnik a folyamatból az emberi tényező, elkerülhetővé válnak
 az olyan felosztások, amelyek valamely érdekcsoportnak szándékosan kedveznek.
 Ugyanakkor az, hogy a program milyen kritériumok alapján végzi a felosztást,
 mindenki számára áttekinthető, így az újraosztás körüli gyakori bizalmatlanság
 is megszűnne.
 Ez remélhetőleg csökkentené a kételyeket a többségi elven működő demokratikus
 rendszerek legitimitását illetően, és megszüntetné a történelem során oly
 sokszor előforduló, önkényes 
\begin_inset Quotes pld
\end_inset

határvonalakat
\begin_inset Quotes prd
\end_inset

.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename NCDISTRICT.png
	lyxscale 40
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Észak-Karolina jelenlegi 12.
 választói körzete
\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
A 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Politika"

\end_inset

.
 fejezetben megmagyarázunk néhány, a probléma átlátásához szükséges politikai
 fogalmat.
 Majd a 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:GISQGIS"

\end_inset

.
 fejezet röviden ismerteti az alkalmazás által használt technológiákat:
 a térinformatikai (GIS) rendszereket általában, majd konkrétan a QGIS térinform
atikai szoftvercsomagot (
\begin_inset CommandInset citation
LatexCommand cite
key "Elek,Bel,Pad,Szabó"

\end_inset

 alapján).
 
\end_layout

\begin_layout Standard
A szavazókörzetek felosztását végző algoritmus részletes bemutatása a 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Algoritmus"

\end_inset

.
 fejezetben található.
 A többszörös célfüggvény néhány elengedhetetlen kritériumnak megfelelően
 van megválasztva, amit szintén ebben a fejezetben tárgyalunk.
 Végül az 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Romania"

\end_inset

.
 fejezetben – a módszer alkalmazásaként – generáljuk Románia megyéinek lehetsége
s felosztásait.
\end_layout

\begin_layout Chapter
Egy kis politika
\begin_inset CommandInset label
LatexCommand label
name "chap:Politika"

\end_inset


\end_layout

\begin_layout Section
Parlamenti választások
\end_layout

\begin_layout Standard
A demokratikus rendszerekben a törvényhozás tagjait legtöbb esetben közvetlenül
 választják meg.
 A törvényhozó testület lehet egykamarás vagy kétkamarás.
 A kétkamarás rendszerek gyakoribbak, ezeket a Képviselőház és a Szenátus
 alkotja.
 Ez nagy számú képviselő
\begin_inset Foot
status open

\begin_layout Plain Layout
Romániában 329, az Egyesült Államokban 435 képviselőt választanak
\end_layout

\end_inset

 és szenátor
\begin_inset Foot
status open

\begin_layout Plain Layout
Romániában 136, az Egyesült Államokban 100 szenátort választanak
\end_layout

\end_inset

 megválasztását jelenti, azonban az országok ennél jóval kevesebb adminisztráció
s egységre (megye, régió, tartomány, stb.) vannak felosztva.
 Közigazgatási szempontból egy ország túlzott 
\begin_inset Quotes pld
\end_inset

felaprózása
\begin_inset Quotes prd
\end_inset

 fölösleges bürokráciához vezet.
 Ugyanakkor, minél nagyobb a parlament tagjainak száma, annál inkább beszélhetün
k képviseleti demokráciáról.
 Tehát a közigazgatási egységek száma nem feleltethető meg a képviselőket
 és szenátorokat megválasztó körzetek számával.
 
\end_layout

\begin_layout Standard
Ahhoz, hogy parlamenti képviselőket válasszunk meg, az ország már meglévő
 közigazgatási egységeit kisebb részekre kell osztani.
 Ezeket a felosztásokat nevezzük választói körzeteknek.
 A körzeteket az ország legkisebb egységei (falvak, városok, stb.) alkotják.
 Kétféle típust különböztetünk meg: többmandátumos választókörzet és egyéni
 (egymandátumos) választókörzet.
 Az egyéni körzetes választási rendszerek esetén minden választókörzet egyetlen
 képviselőt delegál.
 Ebben az esetben a körzetek száma megegyezik a parlamenti mandátumok számával.
 Ilyen szavazói rendszert alkalmaznak többek között Franciaországban, az
 Egyesült Királyságban és az Amerikai Egyesült Államokban.
 A kizárólag egymandátumos választási rendszerekben a választások kimenetele
 sokkal inkább manipulálható, mint a többmandátumos rendszerek esetében.
 Ennek okát a későbbiekben részletesebben is megmagyarázzuk.
 A többmandátumos választókörzeteket az arányos-pártlistás választási rendszerek
ben használják.
 Ez esetben az állampolgárok a pártok jelöltlistáira szavaznak, a pártok
 a kapott szavazatokkal arányos mértékben jutnak be a parlamentbe.
 Sok állam a fent említett választási rendszerek valamilyen kombinációját
 használja, ilyen például Románia és Magyarország.
\end_layout

\begin_layout Section
Redistricting
\end_layout

\begin_layout Standard
Különböző demográfiai változások következtében a választási körzetek populációja
 csökkenhet vagy növekedhet.
 Ez a választói rendszeren belüli aránytalanságokhoz vezet, ami azt eredményezi,
 hogy a sűrűbben lakott körzetek polgárainak szavazata kevesebbet ér, mint
 a gyérebben lakott körzetekben élő polgároké.
 Ez ellentmond a demokrácia 
\begin_inset Quotes pld
\end_inset

egy ember egy szavazat
\begin_inset Quotes prd
\end_inset

 elvével.
 Ennek elkerülése érdekében a választási körzeteket szükség szerint újraoszthatj
ák.
 Ezenkívül törvényi követelmény is lehet, hogy a körzeteket újra kell osztani
 bizonyos időközönként.
 
\end_layout

\begin_layout Standard
Korábban az újraosztást a törvényhozó hatalom végezte el különösebb megkötések
 nélkül.
 Az így bekövetkezett folyamatos visszaélések eredményeként, az országok
 elkezdtek törvényeket hozni az újraosztási tervekre vonatkozólag, például:
 a körzeteknek folytonosnak és kompaktaknak kell lenniük, a körzetek között
 a populációnak egyenletes eloszlást kell követnie, meg kell őrizniük az
 ország adminisztrációs felbontását, stb.
 Mindezek ellenére, általában nem az igazságos választási előfeltételek
 megteremtését társítják a szavazókörzetek újraosztásához.
 Gyakran merül fel a gerrymandering fogalma az újraosztások után, ugyanis
 különböző felosztási tervek, különböző választási kimenetelekhez vezethetnek.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename gerrymandering.png
	lyxscale 20
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Három különböző kimenetelt eredményező felosztás (
\begin_inset CommandInset citation
LatexCommand cite
key "Nass,Ing"

\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Gerrymandering
\end_layout

\begin_layout Standard
1812-ben Massachusetts kormányzója, Elbridge Gerry, jóváhagyott egy olyan
 körzetfelosztási tervet, amely jelentős előnyhöz juttatta a demokratákat.
 A különös alakú választókerület egy szalamandrához hasonlított.
 A Gerry név és az angol 
\begin_inset Quotes pld
\end_inset

salamander
\begin_inset Quotes prd
\end_inset

 szó összetételéből megkapjuk a 
\emph on
gerrymandering
\emph default
 kifejezést, ami a választói körzeteknek egy olyan felosztását jelenti,
 amely kedvező/kedvezőtlen helyzetbe hozhat valamely pártot, etnikai vagy
 vallási csoportot.
 A gerrymandering két fő stratégiája a 
\begin_inset Quotes pld
\end_inset

cracking
\begin_inset Quotes prd
\end_inset

 (szétosztás) és a 
\begin_inset Quotes pld
\end_inset

packing
\begin_inset Quotes prd
\end_inset

 (összerakás).
 Mindkét esetben az ellenfél kárba veszett szavazatainak a maximalizálása
 a cél.
 Ez közvetlenül az egymandátumos körzeteket érinti.
 Az arányos választási rendszerekben minden szavazat beleszámít a végső
 eredménybe, így nem beszélhetünk kárba ment szavazatokról.
 
\end_layout

\begin_layout Standard
A probléma megértéséhez vegyünk például egy 100 szavazóból álló egymandátumos
 körzetet, ahol az 
\begin_inset Formula $A$
\end_inset

 párt 90 szavazatot kap, a 
\begin_inset Formula $B$
\end_inset

 pártra pedig 10-en szavaznak.
 Ebben az esetben a 
\begin_inset Formula $B$
\end_inset

 párt vesztesége 10, a 
\begin_inset Formula $A$
\end_inset

 párté pedig 39 (90 mínusz a győzelemhez szükséges 51 szavazat).
 Látható, hogy a szavazatveszteség eredménytől független.
 Akkor is gerrymandering-et végzünk, ha az ellenfél szavazóit egy körzetbe
 gyűjtjük (packing) és akkor is, ha megosztjuk őket (cracking), úgy hogy
 a lehető legkevesebb helyen érjék el a szavazati többséget.
 Így megtörténhet az, hogy egy párt sokkal több parlamenti helyre tesz szert,
 mint amennyit a választok közötti támogatottsága alapján érdemelne.
 A gerrymandering mérésének egyik módja a parlamentben elfoglalt helyek
 és a szavazók közötti támogatottság kapcsolatának az elemzése.
 Ezen kapcsolat ábrázolására vezették be a hely-szavazat görbét 
\begin_inset Foot
status open

\begin_layout Plain Layout
Angolul 
\begin_inset Quotes pld
\end_inset

seat-vote curve
\begin_inset Quotes prd
\end_inset


\end_layout

\end_inset

 (lásd 
\begin_inset CommandInset citation
LatexCommand cite
key "Coate"

\end_inset

).
 Például az 
\begin_inset Formula $A$
\end_inset

 párt esetében a hely-szavazat görbét az 
\begin_inset Formula $S$
\end_inset

 függvény ábrázolásával szemléltetjük.
 Az 
\begin_inset Formula $S$
\end_inset

 függvény megadja a parlamentben elfoglalt helyek 
\begin_inset Formula $S(V_{A})$
\end_inset

 arányát a párt által kapott szavazatok 
\begin_inset Formula $V_{A}$
\end_inset

 arányának függvényében.
 
\end_layout

\begin_layout Standard
KÉP
\end_layout

\begin_layout Standard
Az így kapott görbék összehasonlításával kimutatható a részrehajlás
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Angolul 
\begin_inset Quotes pld
\end_inset

partisan bias
\begin_inset Quotes prd
\end_inset


\end_layout

\end_inset

 a felosztási tervben.
 Egy teljesen igazságos felosztás azt jelentené, hogy 
\begin_inset Formula $S(V_{A})=S(V_{B})$
\end_inset

 bármely két 
\begin_inset Formula $A$
\end_inset

 és 
\begin_inset Formula $B$
\end_inset

 párt esetén.
 A hely-szavazat görbe elemzése a választások lebonyolítása után megtehető,
 de ezzel nem biztosítottunk egy igazságos választást, csupán utólagos bírálatna
k tehetjük ki az eredményeket.
 Annak garantálása, hogy a felosztási tervek teljesen igazságosak, továbbra
 is megoldatlan feladat.
 Az érintett államok különböző módszerekkel próbálkoznak.
 Van ahol egy politikamentes bizottság végzi a felosztást, máshol egy szoftver
 generálja ezeket, és mindeközben újabb és újabb törvényeket hoznak, amelyeket
 egy felosztási tervnek be kell tartania.
\end_layout

\begin_layout Chapter
Térinformatikai rendszerek
\begin_inset CommandInset label
LatexCommand label
name "chap:GISQGIS"

\end_inset


\end_layout

\begin_layout Standard
A GIS (Geographic Information System) hardver, szoftver és módszerek rendszere,
 amely segíti a komplex tervezési és irányítási feladatok megoldására szolgáló
 térbeli adatok gyűjtését, kezelését, feldolgozását, elemzését és megjelenítését.
 A GIS technológiák könnyedebbé teszik a térbeli adatok rendszerezését és
 térbeli kapcsolataik megértését, azáltal, hogy egy rendszerbe integrálják
 a térképi és leíró adatokat.
 Egy térinformatikai rendszerben az adatok elérése földrajzi helyzetük alapján
 is lehetséges, a digitális térképen megjelölve egy pontot, a szoftver kikeresi
 a térképhez tartozó adatbázisból az adott ponthoz tartozó adatokat.
 Ami igazán fontos ezekben a rendszerekben az a térképek közötti átfedések
 megvalósítása, a térképek úgynevezett 
\begin_inset Quotes pld
\end_inset

összelinkelése
\begin_inset Quotes prd
\end_inset

.
 Így különösebb nehézség nélkül lehet egymás viszonylatában vizsgálni a
 különböző forrásból érkező, különböző típusú adatokat.
 
\end_layout

\begin_layout Section
Adatmodellezés
\end_layout

\begin_layout Standard
A GIS által feldolgozott adatok két típusát különböztetjük meg: térbeli
 és leíró adatok.
 A térbeli jellemzők alapján köthetjük az adatainkat a Föld pontjaihoz (
\emph on
georeferencing
\emph default
), láthatjuk a formájukat és az egymáshoz viszonyított helyzetüket, méretüket.
 A térbeli adatokat úgynevezett 
\emph on
layer
\emph default
-ekben (rétegek, fóliák) tároljuk.
 A layer-ekben tárolt objektumokhoz kapcsolódik egy attribútumtábla, amely
 a leíró adatainkat tartalmazza.
 Minden egyes objektumhoz tartozik egy sor a táblázatban, az oszlopok pedig
 az egyes elemekhez tartozó további adatokat (attribútumokat) tartalmazzák.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ATTRIBTABLE.png
	lyxscale 15
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A térképen látható sárga pontoknak megfelelő sorok vannak az attribútumtáblában
 kijelölve 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A GIS kétféle modellt használ a valós világ reprezentálására.
 Az egyik a raszteres (grid) adatmodell.
 A raszteres adatmodellt azonos méretű cellák (pixelek) alkotják, amelyek
 egy szabályos rácson helyezkednek el.
 Minden cella egy értéket tartalmaz, a rácshálózat az egész teret kitölti
 és a tér minden pontjáról információt hordoz.
 Raszteres adatnak számít például egy műholdfotó, ahol minden színhez különböző
 jelentések társulnak vagy egy topográfiai térkép.
 Legjellemzőbb fájltípusai: .jpg, .tif (GeoTiff), .img stb.
 
\end_layout

\begin_layout Standard
A második adatmodell a vektoros adatmodell, amely az ábrázolandó területet
 és a rajta lévő objektumokat pontok és a köztük lévő egyenesek együtteseként
 fogja fel.
 A raszteres adatmodellel ellentétben, nem tölti ki a teret.
 Csupán pontokat tárol koordinátákként, valamint a vonalak vagy poligonok
 (zárt vonalak) összekötésére vonatkozó információkat.
 Mindig csak azonos típusú geometriai elemeket tartalmazhat.
 A vektoros adatok tárolása leggyakrabban shapefájlokban (ESRI shapefile)
 történik.
 Egy shapefájl a fájlrendszerben nem egyetlen fájlt jelent, hanem rendszerint
 3-6, azonos nevű, de eltérő kiterjesztésű fájlok rendszere: a .dbf kiterjesztésű
 fájl (dBase file) a leíró adatokat tartalmazza, az .shp kiterjesztésű az
 objektumokat tárolja, az .shx fájl a kapcsolatot határozza meg az objektumok
 és az adattábla összetartozó részei között, a .prj kiterjesztésű fájl pedig
 a használt vetítési rendszerre vonatkozó információkat tartalmazza.
 További vektoros fájltípusok: .dwg és .dxf (AutoCAD fájl), .kml (Google Earth
 fájlformátum), .gpx (GPS fájlcsere-formátum).
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename rasvec.jpg
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Vektoros és raszteres adatok tárolása közti alapvető különbségek (
\begin_inset CommandInset citation
LatexCommand cite
key "Vel"

\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Összefoglalva azt mondhatjuk, hogy a raszteres adatmodell elsősorban az
 entitások jelentését vizsgálja (terep, növényzet, épületek, utak, stb.),
 ezért sokkal inkább alkalmas területi elemzésre és topográfiai térképek
 ábrázolására.
 Ezzel szemben a vektoros adatmodell grafika-központú modell, azaz nagyobb
 geometriai pontossággal tárolja az adatokat.
 Nagy előnye, hogy a kép tetszőlegesen nagyítható.
 A két formátum közötti konverzió lehetséges.
 A vektor-raszter konverzió jól megoldott, viszonylag egyszerű feladat,
 melynek során a vektoros információk a raszter felbontásának megfelelő
 méretű képelemmé konvertálódnak, elveszítve eredeti struktúrájukat.
 A raszter-vektor konverzió lényegesen összetettebb feladat, nehezebb automatizá
lni, megoldása nagymértékben függ az alkalmazott konverziós algoritmustól
 és a konverzió paramétereitől.
\end_layout

\begin_layout Section
Vetületi rendszerek
\end_layout

\begin_layout Standard
A térképvetítés olyan matematikai transzformációk sorozata, amelyek során
 a Föld felszínén található pontok a síkkoordináta-rendszerben vetítődnek.
 Bizonyos torzulások, mint szög-, távolság-, vetületi irány-, vonalas aránymérté
k- és terület-torzulás mindig nemkívánatos eredményei a folyamatnak.
 Néhány leképezés ezen tulajdonságok valamelyikének torzulását minimálisra
 csökkenti más, maximálisan kihasználható hibák rovására.
 Némely vetület pedig csak mérsékelten igyekszik torzítani ezen tulajdonságok
 mindegyikét.
 
\end_layout

\begin_layout Standard
A Föld felszíne kitüremkedésekkel és mélyedésekkel teli, ezért ezt a szabálytala
n idomot, helyettesíteni kell egy matematikailag jól meghatározható, a Föld
 formáját nagy mértékben megközelítő felülettel.
 Az így megválasztott felületet nevezik alapfelületnek.
 A leggyakrabban használt alapfelület a forgási ellipszoid (szferoid).
 Egy szferoidot leírhatunk a fél-kistengely hossza és a lapultság (gömb
 formájától való eltérés) által.
 Mivel az így kapott szferoidok egyike sem modellezheti teljes pontossággal
 a Földet, különböző referencia-szferoidokat használnak a vetítések során.
 Amikor csak egy adott terület ábrázolása a cél, a szferoidnak olyan középpontot
 választunk, amivel az illeszkedési hiba minimális.
 Ezt a szakirodalom 
\emph on
geodéziai dátum
\emph default
nak nevezi.
 A térbeli modell meghatározása után következik a pontok síkba való vetítése.
 A vetítés az alapfelületről történik a képfelületre (térkép).
 Általában nem közvetlenül vetítődnek az alapfelület pontjai a síkra, hanem
 a vetítés először egy síkba fejthető felületre történik, amelyet aztán
 
\begin_inset Quotes pld
\end_inset

felvágva
\begin_inset Quotes prd
\end_inset

 a síkba terítenek.
 A vetületi rendszerek különbözhetnek az alapfelületben, a vetítés módszerében,
 az egységnyi hosszmértékében, stb.
 A GIS által használt vetületi rendszereket két csoportba sorolhatjuk: 
\end_layout

\begin_layout Enumerate
Földrajzi koordináta-rendszer – ezek hosszúsági és szélességi koordinátákat
 használnak, közöttük találjuk például a WGS84-t (World Geodetic System
 1984)
\begin_inset Foot
status open

\begin_layout Plain Layout
A WGS-84 az egész Földre definiált dátum
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vetületi koordináta-rendszer – ezek 
\begin_inset Formula $X,Y$
\end_inset

 Descartes-koordinátákat használnak, közöttük találjuk az UTM-t (Universal
 Transverse Mercator)
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
A QGIS-ről röviden
\end_layout

\begin_layout Standard
A QGIS az egyik legnépszerűbb nyílt forráskódú, platformfüggetlen térinformatika
i szoftver, melynek fejlesztése még a 2000-es évek elején kezdődött el.
 Fejlesztése az OSGeo 
\begin_inset Foot
status open

\begin_layout Plain Layout
Open Source Geospatial Foundation
\end_layout

\end_inset

 hivatalos projektje.
 A szoftver képességei és használati lehetőségeinek száma folyamatosan növekszik
, köszönhetően a beépített alapvető függvények és a beépülő modulok gyarapodó
 számának.
 Így a program alkalmas térképek megjelenítésére, szerkesztésére, adatok
 elemzésére és nyomtatható térképek összeállítására.
 Támogatja a legtöbb vektoros formátumot, beleértve az ESRI shapefájlt,
 a Mapinfo, SDTS, és GML (GoogleEarth XML) formátumokat is.
 A QGIS programban megadhatjuk a layer-ek vetületi rendszerét, ez alapértelmezet
ten a WGS-84.
 Különböző rendszerek esetén, azonos vetületi rendszerbe transzformálhatjuk
 az adatainkat, ugyanakkor lehetőségünk van saját vetületi rendszer definiálásár
a.
\end_layout

\begin_layout Standard
A szoftver indítása után az első feladat az objektumokat tartalmazó layer-ek
 betöltése.
 Amint betöltünk egy layer-t az láthatóvá válik a QGIS térképnézegetőjében.
 A térképen történő navigálást legegyszerűbben a Térkép navigáció eszközsor
 elemeivel tehetjük meg.
 Betöltéskor a QGIS felépíti a térképen látható geometriai formáknak megfelelő
 objektumokat.
 Az adatokat manipulálhatjuk a menüsor által nyújtott eszközökkel vagy a
 QGIS által biztosított Python konzolból szkriptek segítségével.
 A Python kódrészletekkel lehetőségünk nyílik a program funkcionalitásainak
 a bővítésére.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename console.png
	lyxscale 20
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A konzolban látható a mellette lévő szövegszerkesztőben írt szkript végrehajtásá
nak eredménye
\end_layout

\end_inset


\end_layout

\end_inset

A konzol megnyitása előtt a QGIS az alábbi két parancsot végrehajtja: 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,keywordstyle={\color{blue}}"
inline false
status open

\begin_layout Plain Layout

from qgis.core import *
\end_layout

\begin_layout Plain Layout

import qgis.utils
\end_layout

\end_inset

A 
\family typewriter
core
\family default
 könyvtár tartalmazza az alap GIS funkcionalitásokat, a 
\family typewriter
utils
\family default
 könyvtár tartalmazza a modulok kezeléséhez szükséges funkcionalitásokat.
 A betöltött layer-ekhez tartozó információkat a 
\family typewriter
QgsInterface
\family default
 osztály 
\family typewriter
iface
\family default
 nevű példányán keresztül érhetjük el.
 Az így kapott layer tartalmazza a térképet alkotó objektumokat.
 Egy objektumot 
\begin_inset Quotes pld
\end_inset

feature
\begin_inset Quotes prd
\end_inset

-nek nevezünk.
 A QGIS által felépített feature egy olyan szótár (Python dictionary), ahol
 a kulcsok az attribútumtábla mezőinek nevei, az értékek pedig a mezők értékei.
 Tehát például az 
\family typewriter
f
\family default
 feature 
\emph on
népesség
\emph default
 elnevezésű mezőjének az értékére 
\family typewriter
f['népesség']
\family default
 formában hivatkozhatunk.
 A QGIS a geometriai műveleteket a 
\family typewriter
GEOS
\family default
 
\begin_inset Foot
status open

\begin_layout Plain Layout
(Geometry Engine, Open Source)
\end_layout

\end_inset

 könyvtár segítségével végzi.
 Minden feature rendelkezik egy 
\family typewriter
QgsGeometry
\family default
 objektummal, ezt a 
\family typewriter
geometry()
\family default
 elnevezésű függvény téríti vissza.
 Az így kapott objektumon már különböző geometriai műveleteket is végrehajthatun
k, például: terület- vagy kerületszámítás, metszéspontok és középpont megkeresés
e, poligonok esetén a vonalakon belül elhelyezkedő pontok meghatározása,
 formák összeillesztése, stb.
\end_layout

\begin_layout Standard
QGIS-ben létrehozhatunk saját modulokat, illetve letölthetünk mások által
 készítetteket.
 A saját modul készítését megkönnyíti a Plugin Builder, amely generál egy
 
\begin_inset Quotes pld
\end_inset

üres
\begin_inset Quotes prd
\end_inset

 QGIS modult (amiben létrehozza a megfelelő könyvtárstruktúrát és a szükséges
 állományokat).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pluginbuilder.png
	lyxscale 20
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A Plugin Builder modul
\end_layout

\end_inset


\end_layout

\end_inset

A Plugin Builder az alábbi könyvtárstruktúrával rendelkező Python modult
 generálja:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename tree.png
	lyxscale 20
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
generált könyvtárstruktúra
\end_layout

\end_inset


\end_layout

\end_inset

Az 
\family typewriter
__init__.py
\family default
 állomány a modul belépési pontja.
 A 
\family typewriter
redistricting.py
\family default
 fájl tartalmazza a főprogramot, a 
\family typewriter
run()
\family default
 metódusa hívódik meg a modul indításakor.
 A 
\family typewriter
redistricting_dialog_base.ui
\family default
 a párbeszédablakot tartalmazza, a párbeszédablak-kezelő a 
\family typewriter
redistricting_dialog.py
\family default
 nevű fájlban van.
 A generált modul továbbá tartalmazza a szintaktika ellenőrzéshez szükséges
 reguláris kifejezéseket (a 
\family typewriter
pylintrc
\family default
 fájlban), a modul metainformációt és egy makefájlt a fordításhoz.
 Amint megvan a modul fejlesztéséhez szükséges keret, telepíthetjük is a
 modult a QGIS pluginkezelőjéből.
 A következő indításkor már az újonnan létrehozott modult is beolvassa a
 QGIS a 
\family typewriter
plugins
\family default
 mappából, és a modul ikonja megjelenik a menüsorban.
 A modul további fejlesztése az általunk választott környezetek bármelyikében
 történhet, azonban a modul futtatása a QGIS programon belül lehetséges.
\end_layout

\begin_layout Chapter
A szavazókörzetek újraosztása
\begin_inset CommandInset label
LatexCommand label
name "chap:Algoritmus"

\end_inset


\end_layout

\begin_layout Section
A szimulált hűtés módszere
\end_layout

\begin_layout Standard
A szimulált hűtés módszere egy metaheurisztikus algoritmus, amelyet kombinatorik
us optimalizációs problémák megoldására használnak.
 A kombinatorikus optimalizálás olyan optimalizációs problémákat old meg,
 ahol a megoldástér véges.
 A szimulált hűtésnek több változata is van: 
\emph on
párhuzamos szimulált hűtés
\emph default
, 
\emph on
gyors szimulált hűtés
\emph default
, 
\emph on
adaptív szimulált hűtés
\emph default
.
 A továbbiakban a klasszikus szimulált hűtés módszerét tárgyaljuk, amelyet
 Kirkpatrick, Gelatt, és Vecchi vezetett be 1983-ban (lásd 
\begin_inset CommandInset citation
LatexCommand cite
key "Kirk"

\end_inset

), optimalizációs problémák megoldására.
 A cikkben leírják a termodinamikai rendszerek viselkedését, majd megmutatják
 hogy ezeket az elveket hogyan lehet felhasználni egy optimalizációs technika
 kifejlesztésére.
 
\end_layout

\begin_layout Standard
Egy termodinamikai rendszert különböző fizikai mennyiségek összessége ír
 le (hőmérséklet, energia, nyomás, entrópia, stb.), míg egy metaheurisztikus
 algoritmusnak csupán két eszközre van szüksége: 
\emph on
célfüggvény
\emph default
re (vagy 
\emph on
költségfüggvény
\emph default
re) és 
\emph on
szomszédos megoldást generáló módszer
\emph default
re.
 A megfeleltetés a következő: az optimalizációhoz használt célfüggvény a
 rendszer energiaszintjének felel meg.
 Amikor a rendszer eléri az egyensúlyi állapotát, az energiaszint minimális.
 A cél a rendszer egyensúlyi állapotának az elérése, vagyis a célfüggvény
 minimumának a megtalálása.
 Egy szomszédos állapotot a jelenlegi állapoton eszközölt véletlen perturbációk
 által érünk el, ami a rendszeren belüli atommozgásoknak feleltethető meg.
 Bevezetünk egy hőmérséklet változót a termodinamikai rendszerek mintájára,
 amely szabályozza a keresésünk viselkedését.
 Ahhoz, hogy megtaláljuk egy anyag egyensúlyi állapotát, nem elegendő ha
 lehűtjük.
 Az analógiát követve, a keresés alacsony hőmérsékleten azt jelenti, hogy
 mindig csak a jobb megoldásokat fogadjuk el, gyakorlatilag lokális minimumot
 keresünk.
 Ha stabil kristályokat akarunk kapni, először forráspont fölé kell melegíteni
 az anyagot, majd lassan hűteni, elegendő időt hagyva a molekuláknak, hogy
 kristályokba rendeződjenek.
 Nagy hőmérsékleten a molekulák kaotikus mozgást végeznek, ennek megfelelően
 az algoritmus is nagy ugrásokat tesz a megoldástérben, így elkerülhető
 az, hogy lokális minimumba ragadjunk.
 Azt, hogy a keresés mekkora valószínűséggel lép a jelenleginél rosszabb
 állapotba, a rendszer aktuális hőmérséklete befolyásolja.
 Az iterációk során akkor fogadunk el egy új megoldást, ha az jobbnak bizonyul,
 mint a jelenlegi megoldás.
 Amennyiben nem alacsonyabb az új megoldásunk célfüggvényének az értéke,
 akkor a jelenlegi megoldást az úgynevezett Metropolis-kritérium alapján
 
\begin_inset Formula 
\[
p=\exp((E-E_{0})/T)
\]

\end_inset

 valószínűséggel cseréljük le, ahol 
\begin_inset Formula $E$
\end_inset

 az aktuális megoldás objektív értéke (a célfüggvény értéke az aktuális
 megoldás esetén), 
\begin_inset Formula $E_{0}$
\end_inset

 a szomszédos megoldás objektív értéke, 
\begin_inset Formula $T$
\end_inset

 pedig a rendszer hőmérséklete.
\end_layout

\begin_layout Section
A körzetek újraosztásának feladata, a célfüggvények
\end_layout

\begin_layout Standard
Az ujraosztási probléma felfogható úgy, mint egy összefüggő terület (ország,álla
m) 
\begin_inset Formula $m$
\end_inset

 darab alterültre (körzetek) való felosztása.
 Egy érvényes felosztási terv alapfeltétele, hogy a körzetek folytonosak
 és figyelembe veszik a már meglévő adminisztrációs határokat.
 Ezeket úgy biztosítjuk, hogy a felosztást mindig egy nagyobb adminisztrációs
 egységen belül végezzük, és a körzeteket a választott egység egymással
 szomszédos, legkisebb adminisztrációs egységei (unitok) alkotják.
 Az így kapott 
\begin_inset Formula $(Z,U)$
\end_inset

 párokat, ahol 
\begin_inset Formula $Z$
\end_inset

 a körzeteket, 
\begin_inset Formula $U=\{u_{1},u_{2},...,u_{n}\}$
\end_inset

 a 
\begin_inset Formula $Z$
\end_inset

 körzethez tartozó unitok halmazát jelöli, nevezzük egy érvényes felosztásnak.
 Azt, hogy egy adminisztrációs egységhet hány körzetre osztunk, a legnagyobb
 maradék módszerrel (largest remainder method) határozzuk meg.
 Először kiszámítjuk a nemzeti átlagot (
\begin_inset Formula $NM=p_{ország}/m$
\end_inset

, ahol 
\begin_inset Formula $p_{ország}$
\end_inset

 az ország populációját jelöli).
 Kezdetben minden megyéhez rendelünk 
\begin_inset Formula $\lfloor p_{megye}/NM\rfloor$
\end_inset

 darab körzetet.
 A megmaradt körzeteket szétosztjuk a legnagyobb 
\begin_inset Formula $frac(p_{megye}/NM)$
\end_inset

 értékkel rendelkező megyék között (mindegyikhez plusz egy körzetet adunk).
 
\end_layout

\begin_layout Standard
Az újraosztás során a célunk olyan érvényes felosztási terveket találni,
 amelyek más, általunk definiált kritériumoknak is megfelelnek.
 Minden kritériumnak megfeleltethető egy célfüggvény, ezek száma tetszőlegesen
 megválasztható.
 A többszörös célfüggvényt használó optimalizáció során arra törekszünk,
 hogy a megadott célfüggvények mindegyikét figyelembe véve találjunk optimum
 közeli megoldást.
 A dolgozatban bemutatott program két célfüggvényt használ, a mexikói újraosztás
ok mintájára, ezeket használta az IFE (Instituto Federal Electoral) a 2006-os
 választásokot megelöző újraosztások során.
 Az első célfüggvény a populáció eloszlását mutatja.
 Minnél alacsonyabb a függvény értéke, annál egyenletesebb az eloszlás:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
C_{1}(P)=\sum_{e\epsilon E}(\frac{P_{e}}{d_{e}*NM})^{2}\sum_{s\epsilon S}(\frac{P_{s}}{P_{e}}-\frac{1}{n_{e}})^{2}
\]

\end_inset

Ahol 
\begin_inset Formula $P=\{Z_{1},Z_{2},...,Z_{n}\}$
\end_inset

 egy felosztási terv, 
\begin_inset Formula $NM$
\end_inset

 a nezeti átlagot jelöli, 
\begin_inset Formula $P_{e}$
\end_inset

 az adott megye populációja.

\emph on
 A
\emph default
 megyében megengedett szórást 
\begin_inset Formula $d_{e}$
\end_inset

- vel jelöljük.
 A szorzat második tagjában levő 
\begin_inset Formula $P_{s}$
\end_inset

 jelöli az adott körzet populációját,
\emph on
 
\begin_inset Formula $n_{e}$
\end_inset

 
\emph default
a megyéhez rendelt körzek száma.
 Az hogy egy megyében megengedett szórás értéke mekkora, annak a függvényében
 változik, hogy a megye átlaga mennyire tér el a nemzeti átlagtól.
 Ha a két átlag közti különbség kevesebb, mint az ország lakosságának az
 5%, a megengedett szórás 15% lesz, 5% és 10% közötti eltérés esetén a szórás
 10%, míg nagyobb eltérések esetén a szórás 5%.
\end_layout

\begin_layout Standard
A második célfüggvény a körzetek formájának a kompaktságát méri.
 Abból kiindulva, hogy a legkompaktabb geometriai alakzat a kör, megtudjuk
 határozni a körzethez tartozó unitok által formált alakzat kompaktságát.
 Legyen a körzet kerülete 
\begin_inset Formula $PE_{s}$
\end_inset

 , területe 
\begin_inset Formula $A_{s}$
\end_inset

.
 Minél kompaktabb a körzetünk, a kerülete annál inkább megegyezik egy 
\begin_inset Formula $A_{s}$
\end_inset

 területű kör kerületével:
\begin_inset Formula 
\[
C_{2}(P)=\ensuremath{\sum_{s\epsilon S}}(\frac{PE_{s}}{4\sqrt{A_{s}}}-1)
\]

\end_inset


\end_layout

\begin_layout Section
Többszörös célfüggvényt használó algoritmus 
\end_layout

\begin_layout Standard
Amikor több célfüggvénnyel dolgozunk egy megoldásról nem mindig állithatjuk
 egyértelműn, hogy jobb/rosszabb, mint a másik megoldás.
 Két megoldás összehasonlításánál a következő három lehetséges eset merül
 fel (ahol 
\begin_inset Formula $U$
\end_inset

 jelöli az aktuális megoldást, 
\begin_inset Formula $V$
\end_inset

 jelöli az új megoldást) :
\end_layout

\begin_layout Enumerate
\begin_inset Formula $V$
\end_inset

 minden célfüggvény szerint jobb megoldásnak bizonyul
\end_layout

\begin_layout Enumerate
\begin_inset Formula $V$
\end_inset

 csak bizonyos célfüggvényekben teljesít jobban
\end_layout

\begin_layout Enumerate
\begin_inset Formula $V$
\end_inset

 minden célfüggvény szerint rosszabb megoldásnak bizonyul
\end_layout

\begin_layout Standard
A megoldásainkat egy olyan halmazba gyűjtjük (Pareto halmaz), amely a fenti
 eseteknek megfelelő szabályok szerint bővül.
 Ha 
\begin_inset Formula $V$
\end_inset

 dominál más megoldásokat (1 eset), átveszi egy dominált megoldás helyét
 és a hozza rendelt súlyokat úgy, hogy azt a megoldást cseréli le, amelyiknél
 a leginkább jobbnak bizonyul.
 Ha 
\begin_inset Formula $V$
\end_inset

 nem dominál (nem igaz az 1.
 eset) és nem dominált (nem igaz a 3.
 eset), akkor bővítjük a halmazunkat a 
\begin_inset Formula $V$
\end_inset

 megoldással.
 Abban az esetben, ha 
\begin_inset Formula $V$
\end_inset

 dominált valamely megoldás által, nem kerül a halmazba, viszont a szimulált
 hűtésnél leírt valószínűség szerint felválthatja a jelenlegi megoldást.
 Amikor egy új megoldás kerül a halmazba, mindig hozza rendelődik egy random
 választott súlyvektor az előre meghatározott súlyok listájából.
 Az algoritmus végére minden súlyvektorhoz fog legalább egy nem dominált
 megoldás tartozni.
 Egy lehetséges algoritmus annak eldöntésére, hogy egy megoldás dominált-e
 más megoldások által, illetve dominál-e más megoldásokat, k darab célfüggvény
 esetén:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}[H]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
SetKw{LogicAnd}{and}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKw{LogicOr}{or}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwData{LogicTrue}{True}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwData{LogicFalse}{False}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
Input{pareto,U,k, where $k 
\backslash
geq 1$ }
\end_layout

\begin_layout Plain Layout


\backslash
Output{$isdominated$,$dominates$}
\end_layout

\begin_layout Plain Layout

$isdominated 
\backslash
leftarrow 
\backslash
LogicFalse$
\backslash
;
\end_layout

\begin_layout Plain Layout

$dominates 
\backslash
leftarrow
\backslash
emptyset $
\backslash
;
\end_layout

\begin_layout Plain Layout


\backslash
For{$S
\backslash
in
\backslash
mathcal Pareto $} {
\end_layout

\begin_layout Plain Layout

	$dominatedbyS 
\backslash
leftarrow 
\backslash
LogicTrue$
\backslash
;
\end_layout

\begin_layout Plain Layout

	$dominatesS 
\backslash
leftarrow 
\backslash
LogicTrue$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
For{$i=1,..,k$} {
\end_layout

\begin_layout Plain Layout

		$dominatedbyS 
\backslash
leftarrow dominatedbyS
\backslash
  
\backslash
LogicAnd
\backslash
  S.objective(i)<U.objective(i) $
\backslash
;
\end_layout

\begin_layout Plain Layout

		$dominatesS 
\backslash
leftarrow dominatesS 
\backslash
  
\backslash
LogicAnd 
\backslash
 U.objective(i)<S.objective(i) $
\backslash
;
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

	$isdominated 
\backslash
leftarrow isdominated 
\backslash
 
\backslash
LogicOr
\backslash
  dominatedbyS $
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
lIf{dominatesS}{$dominates 
\backslash
leftarrow dominates
\backslash
cup
\backslash
left
\backslash
{s
\backslash
right
\backslash
}$} 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
caption{Dominance($pareto$,$U$,$k$)}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset

A körzetek felosztását generáló, többszörös célfüggvényt használó szimulált
 hűtés módszer:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}[H]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
SetKw{LogicAnd}{and}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKw{LogicOr}{or}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwData{LogicTrue}{True}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwData{LogicFalse}{False}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input}
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
Input{$U$,$T$,$maxiter$,$coolingschedule$ where $U$ is a randomly generated
 initial solution, $T$ is the initial temperature, $coolingschedule 
\backslash
in (0,1)$}
\end_layout

\begin_layout Plain Layout


\backslash
Output{$pareto$}
\end_layout

\begin_layout Plain Layout

$pareto 
\backslash
leftarrow 
\backslash
{U
\backslash
}$;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
While{T not frozen}{
\end_layout

\begin_layout Plain Layout

	
\backslash
For{$i=1,..,maxiter$}{
\end_layout

\begin_layout Plain Layout

		$V 
\backslash
leftarrow neighbor(U) $
\backslash
;
\end_layout

\begin_layout Plain Layout

		
\backslash
uIf{dominates(V,pareto)}{     
\end_layout

\begin_layout Plain Layout

			pareto.update(V) 
\backslash
 
\backslash
; 
\end_layout

\begin_layout Plain Layout

			$U 
\backslash
leftarrow V $
\backslash
;
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

		
\backslash
uElseIf{not dominated(V,pareto)}{
\end_layout

\begin_layout Plain Layout

		    $pareto 
\backslash
leftarrow pareto
\backslash
cup
\backslash
left
\backslash
{V
\backslash
right
\backslash
}$ 
\backslash
;  
\end_layout

\begin_layout Plain Layout

			$U 
\backslash
leftarrow V $
\backslash
;
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

		
\backslash
ElseIf{$random(0,1) <= exp((obj(U)-obj(V))/T)$}{
\end_layout

\begin_layout Plain Layout

			$U 
\backslash
leftarrow V $
\backslash
;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	$T 
\backslash
leftarrow T * coolingschedule$
\backslash
;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
caption{Simulated Annealing()}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Az implementáció részletei
\end_layout

\begin_layout Standard
A modul futtatásához szükségünk van két layerre, és a hozzájuk tartozó adatbázis
 mezők konfigurálására.
 A konfigurálást a 
\begin_inset Quotes pld
\end_inset

config.yaml
\begin_inset Quotes prd
\end_inset

 elnevezésű fájl változtatásával tehetjük meg.
 A későbbiekben egy unit szomszédainak a bejárására gyakran kerül sor, ezért
 a modul első használatakor a 
\begin_inset Quotes pld
\end_inset

neighbours.py
\begin_inset Quotes prd
\end_inset

 elnevezésű script lefuttatása is szükséges.
 A script meghatározza az egymással szomszédos unitokat.
 Az így kapott azonosítok tárolása sok futási időt nyer majd az új felosztások
 meghatározása közben.
\end_layout

\begin_layout Standard
A fent említett layerek a felosztandó ország legkisebb adminisztrációs egységeit
 kell tartalmazzák.
 Ez egyik, mint poligonok, a másik mint vonalak (polilines) összessége.
 Azért nem elegendő a unitok csupán poligonos reprezentációja, mert a körzetek
 formálásakor új poligonokat kapunk, amelyeknek a kerületét egyszerűbb kiszámoln
unk, ha vonalakkal dolgozunk.
 A vonalakat tartalmazó attríbútumtábla minden sora egy poligonhoz tartozik
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{unitid}
\end_layout

\end_inset

.
 A további információk a poligon layer mezőire vonatkoznak.
 Megkell adnunk azt a mezőt, amely alapján a unitok nagyobb adminisztrációs
 egységekbe (megye, zóna, stb..) sorolhatóak 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{joinid}
\end_layout

\end_inset

, a unitok nevét 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{name}
\end_layout

\end_inset

, azonosítóját 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{natcode}
\end_layout

\end_inset

, a terület népességét 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{pop}
\end_layout

\end_inset

, a szomszédos unitokat 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{neighbours}
\end_layout

\end_inset

, valamint a poligonokhoz tartozó vonalakat 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{lines}
\end_layout

\end_inset

 tároló mezők neveit.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{numbers=left,stepnumber=1,firstnumber=1,numberfirstline} 
\end_layout

\begin_layout Plain Layout


\backslash
begin{lstlisting}[frame=single,title=config.yaml]
\end_layout

\begin_layout Plain Layout

attributes:   
\end_layout

\begin_layout Plain Layout

	join_id: 'regionId'	*@
\backslash
label{joinid}@*   
\end_layout

\begin_layout Plain Layout

	attribute_name: 'name' 	*@
\backslash
label{name}@*  
\end_layout

\begin_layout Plain Layout

	attribute_population: 'pop2015'	*@
\backslash
label{pop}@*  
\end_layout

\begin_layout Plain Layout

	attribute_id: 'natcode'	*@
\backslash
label{natcode}@*   
\end_layout

\begin_layout Plain Layout

	attribute_neighbours: 'neighbours'	*@
\backslash
label{neighbours}@*   
\end_layout

\begin_layout Plain Layout

	attribute_lines: 'lines'	*@
\backslash
label{lines}@*
\end_layout

\begin_layout Plain Layout

	attribute_id_poliline: 'id'   *@
\backslash
label{unitid}@*
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A további paraméterek megadásával az optimalizáló algoritmus viselkedését
 változtathatjuk.
 Beállítható a generálandó körzetek száma 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{nr_of_districts}
\end_layout

\end_inset

.
 A szimulált hűtés módszerének a következő paramétereit változtathatjuk:
 a kezdeti 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{initial_temperature}
\end_layout

\end_inset

 és végső hőmérséklet 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{final_temperature}
\end_layout

\end_inset

, a hűtés mértéke 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{schedule}
\end_layout

\end_inset

, a hőmérsékletenkénti iteráció 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{iter}
\end_layout

\end_inset

, valamint a hőmérsékletenkénti iterációk számának a növekedése 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{iterations_inc}
\end_layout

\end_inset

.
 Továbbá megadható a megoldás halmaz maximális mérete 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{max_pareto}
\end_layout

\end_inset

, a költségfüggvényekhez rendelhető lehetséges súlyok listája 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{weights}
\end_layout

\end_inset

, és az egy körzeten belüli minimális unitszám 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{min_unit}
\end_layout

\end_inset

.
 Valamit az új felosztást kereső algoritmus cseréinek a száma is változtatható
 
\begin_inset ERT
status open

\begin_layout Plain Layout

ref{neigh}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{numbers=left,stepnumber=1,firstnumber=1,numberfirstline} 
\end_layout

\begin_layout Plain Layout


\backslash
begin{lstlisting}[frame=single,title=config.yaml]
\end_layout

\begin_layout Plain Layout

parameters:   
\end_layout

\begin_layout Plain Layout

	nr_of_districts : 120   	*@
\backslash
label{nr_of_districts}@*
\end_layout

\begin_layout Plain Layout

	cooling_schedule: 0.99   *@
\backslash
label{schedule}@*
\end_layout

\begin_layout Plain Layout

	initial_temperature: 5   *@
\backslash
label{initial_temperature}@*
\end_layout

\begin_layout Plain Layout

	final_temperature: 0.001   *@
\backslash
label{final_temperature}@*
\end_layout

\begin_layout Plain Layout

	iterations: 1800 	*@
\backslash
label{iter}@*
\end_layout

\begin_layout Plain Layout

	iterations_increment : 0  *@
\backslash
label{iterations_inc}@* 
\end_layout

\begin_layout Plain Layout

	neighbourhood: [-1] 	*@
\backslash
label{neigh}@*  
\end_layout

\begin_layout Plain Layout

	weight_vectors : [[0.8,0.2]]   *@
\backslash
label{weights}@*
\end_layout

\begin_layout Plain Layout

	minnr_of_unit : 2   *@
\backslash
label{min_unit}@*
\end_layout

\begin_layout Plain Layout

	max_size_pareto: 100	*@
\backslash
label{max_pareto}@*
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset

Az optimalizáció során alkalmazott célfüggvényeket az 
\begin_inset Quotes pld
\end_inset

objectives.py
\begin_inset Quotes prd
\end_inset

 elnevezésű fájl tartalmazza, ezek bővítés nem adható meg a konfigurációs
 fájlban.
 Amennyiben újabb függvényt szeretnénk egy megoldás kiértékeléséhez adni
 azt implementálnunk kell a függvényeket tartalmazó fájlban.
 A program indítás után iterációnként naplózni fogja a megoldáshalmaz viselkedés
ét.
 Amint a hőmérséklet eléri a fagyáspontot, a legalacsonyabb objektív értékkel
 rendelkező felosztás megjelenik a QGIS térképnézegetőjében.
 
\end_layout

\begin_layout Chapter
Románia
\begin_inset CommandInset label
LatexCommand label
name "chap:Romania"

\end_inset


\end_layout

\begin_layout Section
Románia
\end_layout

\begin_layout Standard
A Romániá adminisztrációs egységeit tartalmazó shape fájlok, egy Romániával
 kapcsolatos térinformatikai adatokat tartalmazó adatbázisból származnak.
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.geo-spatial.org/
\end_layout

\end_inset


\end_layout

\end_inset

A felosztásokat Románia 8 zónájában végeztük, a körzeteket Románia adminisztráci
ós egységei alkotják
\begin_inset Foot
status open

\begin_layout Plain Layout
Románul 
\begin_inset Quotes pld
\end_inset

Unități administrativ-teritoriale
\begin_inset Quotes prd
\end_inset


\end_layout

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename jud_uat.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Románia megyéi és adminisztrációs egységei
\end_layout

\end_inset


\end_layout

\end_inset

A 2015-ös népszámlálási adatokra hagyatkozva, a legnagyobb maradék metódust
 használva 120 körzetet osztottunk szét a zónák között, az alábbi kódot
 használva:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{numbers=none}
\end_layout

\begin_layout Plain Layout


\backslash
begin{lstlisting}[language=Python,frame=single,title=Körzetek Kiosztása]
\end_layout

\begin_layout Plain Layout

def AssignDistricts(self):
\end_layout

\begin_layout Plain Layout

	dict_assigned = {i: (self.counties_pop[i]//self.national_mean,
\end_layout

\begin_layout Plain Layout

	self.counties_pop[i]/self.national_mean - 
\end_layout

\begin_layout Plain Layout

	self.counties_pop[i]//self.national_mean)
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	for i in range(1,self.nr_of_counties + 1)} 
\end_layout

\begin_layout Plain Layout

		assigned = 0
\end_layout

\begin_layout Plain Layout

		for key, value in dict_assigned.iteritems():             
\end_layout

\begin_layout Plain Layout

			if value[0] == 1:                 
\end_layout

\begin_layout Plain Layout

				dict_assigned[key] = (2,0)                 
\end_layout

\begin_layout Plain Layout

				assigned+=2             
\end_layout

\begin_layout Plain Layout

			else:                 
\end_layout

\begin_layout Plain Layout

				assigned+=value[0]
\end_layout

\begin_layout Plain Layout

	unassigned = self.nr_of_districts-assigned         
\end_layout

\begin_layout Plain Layout

	#assigne an additional district to counties with the highest 
\end_layout

\begin_layout Plain Layout

	#fractional remainder
\end_layout

\begin_layout Plain Layout

        
\end_layout

\begin_layout Plain Layout

	if unassigned:             
\end_layout

\begin_layout Plain Layout

		dict_sorted = sorted(dict_assigned.items(), 
\end_layout

\begin_layout Plain Layout

		key=lambda (k, v): v[1],reverse=True)
\end_layout

\begin_layout Plain Layout

            
\end_layout

\begin_layout Plain Layout

		for key,value in list(islice(dict_sorted, unassigned)):              
   
\end_layout

\begin_layout Plain Layout

			dict_assigned[key] = (value[0]+1,value[1])       
\end_layout

\begin_layout Plain Layout

	         
\end_layout

\begin_layout Plain Layout

	return [assv for (assv,rem) in dict_assigned.values()]
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset

A következő körzet kiosztások születtek:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Körzetek Szétosztása
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset External
	template GnumericSpreadsheet
	filename assigndis.ods

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Eredmények
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Coate"

\end_inset

S.
 Coate, B.
 Knight, Socially Optimal Districting: 
\emph on
A Theoretical and Empirical Exploration
\emph default
, The Quarterly Journal of Economics, Vol.
 122, Issue 4
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Elek"

\end_inset

I.
 Elek, 
\emph on
Bevezetés a geoinformatikába
\emph default
, ELTE Eötvös Kiadó (Budapest), 2006.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Bel"

\end_inset

M.
 Belényesi, D.
 Kristóf, J.
 Magyari, 
\emph on
Térinformatika Elméleti Jegyzet
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Pad"

\end_inset

G.
 Padányi-Gulyás,
\emph on
 Segédlet a Quantum GIS régészeti célú felhasználásához
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Szabó"

\end_inset

G.
 Szabó, 
\emph on
Quantum GIS
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Kirk"

\end_inset

S.
 Kirkpatrick, C.
 D.
 Gelatt, M.
 P.
 Vecchi, 
\emph on
Optimization by Simulated Annealing
\emph default
, Science New Series, Vol.
 220, No.
 4598.
 (May 13, 1983), pp.
 671-680.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Ing"

\end_inset

C.
 Ingraham, 
\emph on
How to steal an election: a visual guide
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://www.washingtonpost.com/news/wonk/wp/2015/03/01/this-is-the-best-explanatio
n-of-gerrymandering-you-will-ever-see/
\end_layout

\end_inset

.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Nass"

\end_inset

S.
 Nass, 
\emph on
A chart illustrating gerrymandering in its most basic form
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://commons.wikimedia.org/wiki/File:How_to_Steal_an_Election_-_Gerrymandering.s
vg
\end_layout

\end_inset

 (CC-BY-SA-4.0).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Ring"

\end_inset

E.
 A.
 Ringcón-García, M.
 A.
 Guiterrez-Andrade et al., 
\emph on
A Multiobjective Algorithm for Redistricting
\emph default
, Journal of Applied Research and Technology Vol.
 11, Issue 3, June 2013, pp.
 324–330.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Vel"

\end_inset

S.
 Velasquez, Pàgina de l'assignatura ALE 'Cartografia i Noves Tecnologies
 Cartogràfiques', 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.catalonia.org/cartografia/Clase_03/Raster_Vector.html
\end_layout

\end_inset

.
\end_layout

\end_body
\end_document
